const express = require('express')
const cors = require('cors')
const multer = require('multer')
const OpenAI = require('openai')
const { Pool } = require('pg')
const dns = require('dns')
// –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—Ç—å IPv4 –ø—Ä–∏ —Ä–µ–∑–æ–ª–≤–µ (Node >= 18)
try { dns.setDefaultResultOrder('ipv4first') } catch (_) {}
require('dotenv').config()

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const upload = multer({ 
  storage: multer.memoryStorage(),
  limits: { fileSize: 10 * 1024 * 1024 } // 10MB –ª–∏–º–∏—Ç
})

console.log('Loading Agents SDK...')
const { codeInterpreterTool, Agent, Runner } = require('@openai/agents')
const { z } = require('zod')
console.log('Agents SDK loaded successfully')

const app = express()
app.use(cors())
app.use(express.json({ limit: '10mb' }))

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π OpenAI –∫–ª–∏–µ–Ω—Ç –¥–ª—è Assistants API
const openaiClient = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ Postgres —á–µ—Ä–µ–∑ Supabase Connection Pooling
const buildPool = () => {
  const url = new URL(process.env.DATABASE_URL)
  
  // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ pooler URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (url.hostname.includes('pooler') || url.port === '6543') {
    console.log('[db] Using Supabase Connection Pooling (PgBouncer)')
    return new Pool({
      connectionString: process.env.DATABASE_URL,
      ssl: { rejectUnauthorized: false },
      keepAlive: true
    })
  }
  
  // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç pooler –¥–ª—è Supabase
  const poolerHost = url.hostname.replace('db.', '').replace('.supabase.co', '.pooler.supabase.com')
  const poolerUrl = `postgresql://${url.username}:${url.password}@${poolerHost}:6543${url.pathname}?pgbouncer=true&connection_limit=1&sslmode=require`
  
  console.log('[db] Converting to Supabase Connection Pooling URL')
  console.log(`[db] Pooler host: ${poolerHost}`)
  console.log(`[db] Pooler URL: ${poolerUrl}`)
  
  return new Pool({
    connectionString: poolerUrl,
    ssl: { rejectUnauthorized: false },
    keepAlive: true
  })
}

let pool
// —Å–æ–∑–¥–∞–µ–º –ø—É–ª —Å—Ä–∞–∑—É (–±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –∂–¥–∞—Ç—å DNS)
pool = buildPool()

const initDb = async (retries = 3) => {
  if (!pool) pool = buildPool()
  
  for (let i = 0; i < retries; i++) {
    try {
      await pool.query(`
        CREATE TABLE IF NOT EXISTS reports (
          id SERIAL PRIMARY KEY,
          session_id TEXT UNIQUE NOT NULL,
          company_bin TEXT,
          amount TEXT,
          term TEXT,
          purpose TEXT,
          name TEXT,
          email TEXT,
          phone TEXT,
          report_text TEXT,
          status TEXT DEFAULT 'generating',
          files_count INTEGER DEFAULT 0,
          files_data TEXT,
          created_at TIMESTAMPTZ DEFAULT NOW(),
          completed_at TIMESTAMPTZ
        );
        CREATE TABLE IF NOT EXISTS messages (
          id SERIAL PRIMARY KEY,
          session_id TEXT NOT NULL,
          role TEXT NOT NULL,
          content TEXT NOT NULL,
          content_type TEXT DEFAULT 'text',
          message_order INTEGER NOT NULL,
          created_at TIMESTAMPTZ DEFAULT NOW()
        );
        CREATE TABLE IF NOT EXISTS files (
          id SERIAL PRIMARY KEY,
          session_id TEXT NOT NULL,
          file_id TEXT NOT NULL,
          original_name TEXT NOT NULL,
          file_size INTEGER,
          mime_type TEXT,
          uploaded_at TIMESTAMPTZ DEFAULT NOW()
        );
        CREATE INDEX IF NOT EXISTS idx_messages_session ON messages(session_id);
        CREATE INDEX IF NOT EXISTS idx_files_session ON files(session_id);
        CREATE INDEX IF NOT EXISTS idx_reports_created ON reports(created_at);
      `)
      console.log('‚úÖ Postgres initialized with all tables')
      return
    } catch (error) {
      console.error(`‚ùå Postgres init attempt ${i + 1}/${retries} failed:`, error.message)
      
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ DNS –¥–ª—è pooler, –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL
      if (error.code === 'ENOTFOUND' && i === 0) {
        console.log('[db] Pooler failed, trying original URL with IPv4 forcing...')
        pool = new Pool({
          connectionString: process.env.DATABASE_URL,
          ssl: { rejectUnauthorized: false },
          keepAlive: true,
          lookup: (hostname, options, callback) => {
            return dns.lookup(hostname, { ...options, family: 4, all: false }, callback)
          }
        })
        continue
      }
      
      if (i === retries - 1) throw error
      console.log(`‚è≥ Retrying in 2 seconds...`)
      await new Promise(resolve => setTimeout(resolve, 2000))
    }
  }
}

initDb().catch((e) => {
  console.error('‚ùå Failed to initialize Postgres after all retries', e)
  process.exit(1)
})

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î (Postgres)
const saveMessageToDB = async (sessionId, role, content, messageOrder) => {
  try {
    await pool.query(
      `INSERT INTO messages (session_id, role, content, message_order) VALUES ($1, $2, $3, $4)`,
      [sessionId, role, JSON.stringify(content), messageOrder]
    )
    console.log(`üíæ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: ${role} #${messageOrder}`)
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î:`, error)
  }
}

const saveFileToDB = async (sessionId, fileId, originalName, fileSize, mimeType) => {
  try {
    await pool.query(
      `INSERT INTO files (session_id, file_id, original_name, file_size, mime_type) VALUES ($1, $2, $3, $4, $5)`,
      [sessionId, fileId, originalName, fileSize, mimeType]
    )
    console.log(`üìé –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î: ${originalName}`)
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –ë–î:`, error)
  }
}

const getMessagesFromDB = async (sessionId) => {
  try {
    const { rows } = await pool.query(
      `SELECT role, content, message_order FROM messages WHERE session_id = $1 ORDER BY message_order ASC`,
      [sessionId]
    )
    return rows.map(msg => ({
      role: msg.role,
      content: JSON.parse(msg.content)
    }))
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ë–î:`, error)
    return []
  }
}

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ (–≤ –ø–∞–º—è—Ç–∏) - —Ç–µ–ø–µ—Ä—å –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ –ë–î
const conversationHistory = new Map()

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ —Å–µ—Å—Å–∏—è–º
// –§–æ—Ä–º–∞—Ç: session -> [{fileId: string, originalName: string, size: number}]
const sessionFiles = new Map()

// Code Interpreter –±–µ–∑ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
// –§–∞–π–ª—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
const codeInterpreter = codeInterpreterTool({
  container: { type: 'auto' }
})

const InvestmentAgentSchema = z.object({
  amount: z.number().nullable().optional(),
  term_months: z.number().nullable().optional(),
  completed: z.boolean().nullable().optional()
})

// Financial Analyst Agent –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
const financialAnalystAgent = new Agent({
  name: 'Financial Analyst',
  instructions: `–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ iKapitalist. –¢–≤–æ—è –ì–õ–ê–í–ù–ê–Ø –¶–ï–õ–¨ - –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å—Ç—É—é –≤—ã—Ä—É—á–∫—É –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤, —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö —Å—á–µ—Ç–æ–≤, –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–º–ø–∞–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–æ–±–æ—Ä–æ—Ç –º–µ–Ω–µ–µ 60 –º–ª–Ω —Ç–µ–Ω–≥–µ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤).

üìä **–†–ï–ó–Æ–ú–ï –ó–ê–Ø–í–ö–ò**
- –ö–æ–º–ø–∞–Ω–∏—è: [–ë–ò–ù]
- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞: [—Å—É–º–º–∞] KZT
- –°—Ä–æ–∫: [–º–µ—Å—è—Ü–µ–≤]
- –¶–µ–ª—å: [—Ü–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è]
- –ö–æ–Ω—Ç–∞–∫—Ç—ã: [–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω]

üéØ **–û–°–ù–û–í–ù–´–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–´**

1. üí∞ **–í–´–Ø–í–õ–ï–ù–ò–ï –û–ë–û–†–û–¢–û–í –ü–û –†–ï–ê–õ–ò–ó–ê–¶–ò–ò**
   –¶–µ–ª—å: –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥.
   
   –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
   - –ò–∑ –≤—Å–µ—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –≤—ã–ø–∏—Å–æ–∫ (—Ç–µ–Ω–≥–æ–≤—ã—Ö, –¥–æ–ª–ª–∞—Ä–æ–≤—ã—Ö, —Ä—É–±–ª—ë–≤—ã—Ö, –µ–≤—Ä–æ-—Å—á–µ—Ç–æ–≤) –≤—ã–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –æ–ø–ª–∞—Ç–æ–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ —Ç–æ–≤–∞—Ä—ã –∏–ª–∏ —É—Å–ª—É–≥–∏
   - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è –≤—ã—Ä—É—á–∫–∞, –∞ –Ω–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç—ã
   - –ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º (–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞, –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã, —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å)

2. üö´ **–ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ï–†–ï–õ–ï–í–ê–ù–¢–ù–´–• –û–ü–ï–†–ê–¶–ò–ô**
   –¶–µ–ª—å: –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª–∞—Å—å —Ç–æ–ª—å–∫–æ "—á–∏—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è".
   
   –£–±—Ä–∞—Ç—å:
   - –í–æ–∑–≤—Ä–∞—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ (–æ–±—Ä–∞—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∫–ª–∏–µ–Ω—Ç–∞–º)
   - –ó–∞–π–º—ã, –∫—Ä–µ–¥–∏—Ç—ã, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–µ—Ä–µ–≤–æ–¥—ã –º–µ–∂–¥—É —Å–≤–æ–∏–º–∏ —Å—á–µ—Ç–∞–º–∏
   - –û—à–∏–±–æ—á–Ω—ã–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è
   - –õ—é–±—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–¥–∞–∂–µ–π
   - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –º–µ–∂–¥—É —Å—á–µ—Ç–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏

3. üí± **–£–ß–Å–¢ –í–ê–õ–Æ–¢–ù–´–• –°–ß–ï–¢–û–í**
   –¶–µ–ª—å: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –≤–∞–ª—é—Ç–Ω—É—é –≤—ã—Ä—É—á–∫—É –≤ –æ–±—â—É—é —Å—É–º–º—É.
   
   –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
   - –ü–æ –∫–∞–∂–¥–æ–º—É –≤–∞–ª—é—Ç–Ω–æ–º—É —Å—á—ë—Ç—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è (USD, EUR, RUB –∏ —Ç.–¥.)
   - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Ç–µ–Ω–≥–µ –ø–æ –∫—É—Ä—Å—É –Ω–∞ –¥–∞—Ç—É –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è (–∫—É—Ä—Å –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞ –∏–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ù–ë –†–ö)
   - –ù–ï —É—á–∏—Ç—ã–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –º–µ–∂–¥—É –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∏ —Ç–µ–Ω–≥–æ–≤—ã–º–∏ —Å—á–µ—Ç–∞–º–∏ (—á—Ç–æ–±—ã –Ω–µ –∑–∞–¥–≤–æ–∏—Ç—å –≤—ã—Ä—É—á–∫—É)
   - –ï—Å–ª–∏ —á–∞—Å—Ç—å –≤–∞–ª—é—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –Ω–∞–ø—Ä—è–º—É—é ‚Äî —ç—Ç–∏ —Å—É–º–º—ã –Ω–µ —Å—á–∏—Ç–∞—Ç—å –≤—ã—Ä—É—á–∫–æ–π (—Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –Ω–µ –¥–æ—Ö–æ–¥—è—Ç –¥–æ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Ç–µ–Ω–≥–µ)

4. üìÖ **–ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –ú–ï–°–Ø–¶–ê–ú**
   –¶–µ–ª—å: –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –ø—Ä–æ–¥–∞–∂ –≤–æ –≤—Ä–µ–º–µ–Ω–∏.
   
   –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
   - –ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –í–°–ï –≤—ã–ø–∏—Å–∫–∏: –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫ –æ—Ç –æ–¥–Ω–æ–≥–æ —Ç–∞–∫ –∏ –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏—Ö –±–∞–Ω–∫–æ–≤.
   - –û–ë–™–ï–î–ò–ù–ò –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –≤—ã–ø–∏—Å–æ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
   - –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å—Ç—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è (–≤ –ø–µ—Ä–µ—Å—á—ë—Ç–µ –≤ —Ç–µ–Ω–≥–µ) –ø–æ –º–µ—Å—è—Ü–∞–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
   - –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥
   - –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–∏–Ω–∞–º–∏–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
   - –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –¥–∞–Ω–Ω—ã–µ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤—ã–ø–∏—Å–æ–∫

5. üìà **–§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –°–í–û–î–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê**
   –¶–µ–ª—å: –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–π –∏—Ç–æ–≥ –¥–ª—è –æ—Ç—á—ë—Ç–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏.
   
   –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
   - –°–¥–µ–ª–∞—Ç—å —Å–≤–æ–¥–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:
     * –ú–µ—Å—è—Ü
     * –†–µ–∞–ª–∏–∑–∞—Ü–∏—è (—Ç–µ–Ω–≥–µ + –≤–∞–ª—é—Ç–Ω—ã–µ —Å—á–µ—Ç–∞ –≤ –ø–µ—Ä–µ—Å—á—ë—Ç–µ)
     * –í–æ–∑–≤—Ä–∞—Ç—ã
     * –ß–∏—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
   - –ü–æ –∂–µ–ª–∞–Ω–∏—é –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ (–¥–∏–Ω–∞–º–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º)

6. ‚öñÔ∏è **–°–†–ê–í–ù–ï–ù–ò–ï –° –¢–†–ï–ë–û–í–ê–ù–ò–Ø–ú–ò –ü–õ–ê–¢–§–û–†–ú–´**
   –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª–∏–º–∏—Ç—É.
   
   –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
   - –°—Ä–∞–≤–Ω–∏—Ç—å –æ–±—â—É—é —á–∏—Å—Ç—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤ —Å –ø–æ—Ä–æ–≥–æ–º 60 –º–ª–Ω —Ç–µ–Ω–≥–µ
   - –ï—Å–ª–∏ –º–µ–Ω—å—à–µ ‚Äî –∫–æ–º–ø–∞–Ω–∏—è –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
   - –ï—Å–ª–∏ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ ‚Äî –∫–æ–º–ø–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º

üìã **–°–¢–†–£–ö–¢–£–†–ê –û–¢–ß–ï–¢–ê**

**–ê–ù–ê–õ–ò–ó –ü–û –ë–ê–ù–ö–ê–ú:**
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞–Ω–∫–∞:
- –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –∏ –ø–µ—Ä–∏–æ–¥(—ã) –≤—ã–ø–∏—Å–∫–∏
- –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (—Å—É–º–º–∞ –≤ —Ç–µ–Ω–≥–µ)
- –ò—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º)
- –ß–∏—Å—Ç–∞—è –≤—ã—Ä—É—á–∫–∞ –ø–æ –±–∞–Ω–∫—É (—Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤—ã–ø–∏—Å–æ–∫ —ç—Ç–æ–≥–æ –±–∞–Ω–∫–∞)

**–°–í–û–î–ù–´–ô –ê–ù–ê–õ–ò–ó:**
- –û–±—â–∞—è —á–∏—Å—Ç–∞—è –≤—ã—Ä—É—á–∫–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤: [—Å—É–º–º–∞] KZT
- –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º (—Ç–∞–±–ª–∏—Ü–∞)
- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ‚úÖ/‚ùå

**–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:**
- ‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (–≤—ã—Ä—É—á–∫–∞ ‚â• 60 –º–ª–Ω KZT)
- ‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (–≤—ã—Ä—É—á–∫–∞ < 60 –º–ª–Ω KZT)

---

–í–ê–ñ–ù–û:
- –ò—Å–ø–æ–ª—å–∑—É–π Code Interpreter –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
- –í—Å–µ —Å—É–º–º—ã —É–∫–∞–∑—ã–≤–∞–π –≤ KZT —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
- –ë—É–¥—å —Ç–æ—á–Ω—ã–º —Å –¥–∞—Ç–∞–º–∏ –∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
- –ü—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤—ã–ø–∏—Å–æ–∫ —É–±–µ–¥–∏—Å—å, —á—Ç–æ –Ω–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
- –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –ø–æ–∫—Ä—ã—Ç—ã –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤ (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤—ã–ø–∏—Å–æ–∫)
- –í—ã–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –§–û–ö–£–°–ò–†–£–ô–°–Ø –Ω–∞ —á–∏—Å—Ç–æ–π –≤—ã—Ä—É—á–∫–µ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∞ –Ω–µ –Ω–∞ –æ–±—â–∏—Ö –æ–±–æ—Ä–æ—Ç–∞—Ö`,
  model: 'gpt-5',
  tools: [codeInterpreter],
  modelSettings: { store: true }
})

const investmentAgent = new Agent({
  name: 'Investment Agent',
  instructions: `–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –¥–ª—è iKapitalist. –°–æ–±–∏—Ä–∞–π –¥–∞–Ω–Ω—ã–µ –ø–æ—à–∞–≥–æ–≤–æ, –∑–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑.

–í–ê–ñ–ù–û: –ü–ï–†–ï–î –∫–∞–∂–¥—ã–º –æ—Ç–≤–µ—Ç–æ–º –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å:
- –ù–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–∏–∞–ª–æ–≥
- –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å–æ–±—Ä–∞–Ω—ã
- –ö–∞–∫–æ–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å

–≠–¢–ê–ü–´ –°–ë–û–†–ê –î–ê–ù–ù–´–• (–ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è —É—Å–ª–æ–≤–∏–π):
1. "–ö–∞–∫—É—é —Å—É–º–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?" - –ø–æ–ª—É—á–∏ —Å—É–º–º—É –∏ —É–±–µ–¥–∏—Å—å  —á—Ç–æ —Å—É–º–º–∞ –º–µ–∂–¥—É –º–∏–Ω 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤- –º–∞–∫—Å 1 –º–∏–ª–ª–∏—è—Ä–¥ —Ç–µ–Ω–≥–µ
2. "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫?" (–≤ –º–µ—Å—è—Ü–∞—Ö) - –ø–æ–ª—É—á–∏ —Å—Ä–æ–∫ –∏ —É–±–µ–¥–∏—Å—å —á—Ç–æ —Å—Ä–æ–∫ –º–µ–∂–¥—É 4 –∏ 36 –º–µ—Å—è—Ü–µ–≤
3. "–î–ª—è —á–µ–≥–æ –í—ã –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ?" - –ø–æ–ª—É—á–∏ —Ü–µ–ª—å
4. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à –ë–ò–ù" - –ø–æ–ª—É—á–∏ –ë–ò–ù –∏ —É–±–µ–¥–∏—Å—å —á—Ç–æ –ë–ò–ù —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 12 —Ü–∏—Ñ—Ä
5. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É —Å –±–∞–Ω–∫–∞ –æ—Ç —é—Ä –ª–∏—Ü–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤" - –ø–æ–ª—É—á–∏ –≤—ã–ø–∏—Å–∫–∏
6. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–ø–∏—Å–∫–∏ - –∑–∞–ø—Ä–æ—Å–∏ –≤—ã–ø–∏—Å–∫–∏ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–æ–≤ –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥(–ø–æ–≤—Ç–æ—Ä—è–π –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è "–Ω–µ—Ç")
7. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω" - –ø–æ–ª—É—á–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ —É–±–µ–¥–∏—Å—å —á—Ç–æ –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–∞–∫–æ–º—É –ª–∏–±–æ –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –∏ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 11 —Ü–∏—Ñ—Ä
8. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ - –æ—Ç–ø—Ä–∞–≤—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü–†–ê–í–ò–õ–ê –ê–ù–ê–õ–ò–ó–ê –ò–°–¢–û–†–ò–ò:
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –µ—Å—Ç—å —Å—É–º–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "90 –º–∏–ª", "90 –º–ª–Ω") - –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–π —Å—É–º–º—É —Å–Ω–æ–≤–∞
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –µ—Å—Ç—å —Å—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "12 –º–µ—Å—è—Ü–µ–≤") - –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–π —Å—Ä–æ–∫ —Å–Ω–æ–≤–∞
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –µ—Å—Ç—å —Ü–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å") - –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–π —Ü–µ–ª—å —Å–Ω–æ–≤–∞
- –ï—Å–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –µ—Å—Ç—å –ë–ò–ù (–Ω–∞–ø—Ä–∏–º–µ—Ä, "100740014947") - –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–π –ë–ò–ù —Å–Ω–æ–≤–∞
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "—Ç—ã –∂–µ —É–∂–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª" - –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É

–ê–ù–ê–õ–ò–ó –ë–ê–ù–ö–û–í–°–ö–ò–• –í–´–ü–ò–°–û–ö:

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨:
1. –°–æ–±—Ä–∞—Ç—å –≤—ã–ø–∏—Å–∫–∏ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤ 
2. –°–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏ –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥
3. –ü–æ–≤—Ç–æ—Ä—è—Ç—å –ø—É–Ω–∫—Ç 2 –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è "–Ω–µ—Ç"
4. –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ "–Ω–µ—Ç" ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç —Ñ–∞–π–ª:

1. –ê–ù–ê–õ–ò–ó–ò–†–£–ô —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Code Interpreter:
   - –ò–∑–≤–ª–µ–∫–∏ –ø–µ—Ä–∏–æ–¥ –≤—ã–ø–∏—Å–∫–∏ (–¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞)
   - –û–ø—Ä–µ–¥–µ–ª–∏, –∫–∞–∫–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ (–≥–æ–¥ –∏ –º–µ—Å—è—Ü)
   - –ü—Ä–æ–≤–µ—Ä—å, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–∞–Ω–Ω—ã—Ö (12 –º–µ—Å—è—Ü–µ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è)
   - –ü—Ä–æ–≤–µ—Ä—å, —ç—Ç–æ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≤—ã–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–µ—Ç

2. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ò–û–î–ê:
   –ù—É–∂–Ω–∞ –≤—ã–ø–∏—Å–∫–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤
   
   –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—å –Ω–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞ –≤—ã–ø–∏—Å–∫–∏ –∏ –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–æ–ª–Ω—ã—Ö 12 –º–µ—Å—è—Ü–µ–≤!
   
   –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ Code Interpreter:
   1. –û–ø—Ä–µ–¥–µ–ª–∏ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤—ã–ø–∏—Å–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1.1.2025) –∏ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –≤—ã–ø–∏—Å–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 31.1.2025 –∏–ª–∏ —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞)
   2. –í—ã—á–∏—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü—É –≤ –º–µ—Å—è—Ü–∞—Ö –º–µ–∂–¥—É –¥–∞—Ç–æ–π –Ω–∞—á–∞–ª–∞ –∏ –¥–∞—Ç–æ–π –∫–æ–Ω—Ü–∞ –≤—ã–ø–∏—Å–∫–∏
   3. –ï—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤—ã–ø–∏—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ú–ï–ù–ï–ï 12 –º–µ—Å—è—Ü–µ–≤:
         –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –°–ü–†–û–°–ò: "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–º –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤. –í–∞—à–∞ –≤—ã–ø–∏—Å–∫–∞ –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ —Å [–¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥] –ø–æ [–¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥] ([X] –º–µ—Å—è—Ü–µ–≤). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤."

         –ù–ï –ü–ï–†–ï–•–û–î–ò –∫ –≤–æ–ø—Ä–æ—Å–∞–º –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—à—å –≤—ã–ø–∏—Å–∫—É –∑–∞ –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤ –¥–∞–Ω–Ω—ã—Ö!
   
   –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ –≤—ã–ø–∏—Å–∫–∞ –∑–∞ –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤:
      "–í—ã–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—á–µ—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–∞—Ö? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫–∏ –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'."
   
   –ü–û–°–õ–ï –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–π –≤—ã–ø–∏—Å–∫–∏ –¥—Ä—É–≥–æ–≥–æ –±–∞–Ω–∫–∞ –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞:
      –ü—Ä–æ–≤–µ—Ä—å —á–µ—Ä–µ–∑ Code Interpreter, –ø–æ–∫—Ä—ã–≤–∞—é—Ç –ª–∏ –≤—ã–ø–∏—Å–∫–∞ –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤
      - –ï—Å–ª–∏ –î–ê: "–í—ã–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—á–µ—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–∞—Ö? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫–∏ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'."
      - –ï—Å–ª–∏ –ù–ï–¢: –ø–æ–ø—Ä–æ—Å–∏ –≤—ã–ø–∏—Å–∫—É –∑–∞ –ø–æ–ª–Ω—ã–µ 12 –º–µ—Å—è—Ü–µ–≤, –∑–∞ —Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞
   
   –ü–û–°–õ–ï –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π –≤—ã–ø–∏—Å–∫–∏ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –±–∞–Ω–∫–∞:
      –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–∏–æ–¥ —ç—Ç–æ–π –≤—ã–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ Code Interpreter (—Ç–∞–∫ –∂–µ, –∫–∞–∫ –¥–ª—è –ø–µ—Ä–≤–æ–π –≤—ã–ø–∏—Å–∫–∏):
      - –ï—Å–ª–∏ –≤—ã–ø–∏—Å–∫–∞ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –ù–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥ —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞ - –ø–æ–ø—Ä–æ—Å–∏ –≤—ã–ø–∏—Å–∫—É –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞, –¥–ª—è —ç—Ç–æ–≥–æ –±–∞–Ω–∫–∞
      - –ï—Å–ª–∏ –≤—ã–ø–∏—Å–∫–∞ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥ —á—Ç–æ –ø–µ—Ä–≤–∞—è –≤—ã–ø–∏—Å–∫–∞ - —Å–ø—Ä–æ—Å–∏ –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏
      –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –°–ü–†–û–°–ò: "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –µ—â–µ —Å—á–µ—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–∞—Ö? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫–∏. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'."
   
   –¢–û–õ–¨–ö–û –ü–û–°–õ–ï "–Ω–µ—Ç" –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏:
      "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω."
      
   –í–ê–ñ–ù–û: –ù–ï –ü–ï–†–ï–•–û–î–ò –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –ë–ï–ó —è–≤–Ω–æ–≥–æ "–Ω–µ—Ç"!

–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –°–õ–£–ß–ê–ò:
–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤—ã–ø–∏—Å–∫—É –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤ ("–Ω–µ—Ç –ø–æ–¥ —Ä—É–∫–æ–π", "–Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å" –∏ —Ç.–ø.):
   –°–∫–∞–∑–∞—Ç—å: "–î–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –≤—ã–ø–∏—Å–∫–∞ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–µ—Ä–∏—Ç–µ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –∑–∞–Ω–æ–≤–æ. –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω."
   –ó–ê–ö–†–´–¢–¨ –¥–∏–∞–ª–æ–≥.

–ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï:
–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª "–Ω–µ—Ç" –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏:
   "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω."

–§–ò–ù–ê–õ–¨–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï:
–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
   "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ. –ú—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏. –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã iKapitalist."
   
   –°–û–•–†–ê–ù–ò –≤ –∏—Å—Ç–æ—Ä–∏—é –æ—Ç—á—ë—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: —Å—É–º–º–∞, —Å—Ä–æ–∫, —Ü–µ–ª—å, –ë–ò–ù, –≤—ã–ø–∏—Å–∫–∏, –∫–æ–Ω—Ç–∞–∫—Ç—ã.

–í–ê–ñ–ù–û: 
- –ó–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ.
- –û—Ç–≤–µ—á–∞–π –ø—Ä–æ—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
- –ö–ª–∏–µ–Ω—Ç—É –≥–æ–≤–æ—Ä–∏ —Ç–æ–ª—å–∫–æ "–í—ã–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞" + —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å.
- –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–µ–ª–∞–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.

–ü–†–ò–ú–ï–†–´ –ê–ù–ê–õ–ò–ó–ê –ò–°–¢–û–†–ò–ò:
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "100740014947" - —ç—Ç–æ –ë–ò–ù, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "90 –º–∏–ª" - —ç—Ç–æ —Å—É–º–º–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É  
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "12" - —ç—Ç–æ —Å—Ä–æ–∫, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "–Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å" - —ç—Ç–æ —Ü–µ–ª—å, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "—Ç—ã –∂–µ —É–∂–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª" - –Ω–∞–π–¥–∏ —Å–ª–µ–¥—É—é—â–∏–π –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π —ç—Ç–∞–ø

–ê–õ–ì–û–†–ò–¢–ú –†–ê–ë–û–¢–´:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
2. –û–ø—Ä–µ–¥–µ–ª–∏, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å–æ–±—Ä–∞–Ω—ã (—Å—É–º–º–∞, —Å—Ä–æ–∫, —Ü–µ–ª—å, –ë–ò–ù, –≤—ã–ø–∏—Å–∫–∏, –∫–æ–Ω—Ç–∞–∫—Ç—ã)
3. –ù–∞–π–¥–∏ –ø–µ—Ä–≤—ã–π –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π —ç—Ç–∞–ø
4. –ó–∞–¥–∞–π —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –ø–æ —ç—Ç–æ–º—É —ç—Ç–∞–ø—É
5. –ù–ï –ø–æ–≤—Ç–æ—Ä—è–π —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`,
  model: 'gpt-5-mini',
  tools: [codeInterpreter],
  modelSettings: { store: true }
})

const informationAgent = new Agent({
  name: 'Information Agent',
  instructions: '–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.',
  model: 'gpt-5',
  modelSettings: { store: true }
})

app.post('/api/agents/run', upload.single('file'), async (req, res) => {
  try {
    const { text, sessionId } = req.body
    const file = req.file
    const session = sessionId || `session_${Date.now()}`
    
    console.log(`\nü§ñ [${new Date().toLocaleTimeString()}] –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:`)
    console.log(`üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "${text}"`)
    console.log(`üÜî –°–µ—Å—Å–∏—è: ${session}`)
    if (file) console.log(`üìé –§–∞–π–ª: ${file.originalname}`)
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
    if (!conversationHistory.has(session)) {
      // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ë–î
      const dbMessages = await getMessagesFromDB(session)
      if (dbMessages.length > 0) {
        conversationHistory.set(session, dbMessages)
        console.log(`üîÑ –ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –ë–î: ${dbMessages.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      } else {
        conversationHistory.set(session, [])
        console.log(`üÜï –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è`)
      }
    } else {
      console.log(`üìö –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–∏: ${conversationHistory.get(session).length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
    }
    
    const history = conversationHistory.get(session)
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageContent = [{ type: 'input_text', text }]
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ OpenAI API
    let uploadedFileId = null
    if (file) {
      console.log(`üìé –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: ${file.originalname}, —Ä–∞–∑–º–µ—Ä: ${file.size} –±–∞–π—Ç`)
      
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ OpenAI
        const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })
        
        // –°–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –¥–ª—è Node.js
        const fileToUpload = new File([file.buffer], file.originalname, {
          type: file.mimetype
        })
        
        const uploadedFile = await openai.files.create({
          file: fileToUpload,
          purpose: 'assistants'
        })
        uploadedFileId = uploadedFile.id
        console.log(`‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ OpenAI: ${uploadedFileId}`)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ sessionFiles –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        if (!sessionFiles.has(session)) {
          sessionFiles.set(session, [])
        }
        sessionFiles.get(session).push({
          fileId: uploadedFileId,
          originalName: file.originalname,
          size: file.size,
          uploadedAt: new Date().toISOString()
        })
        console.log(`üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ—Å—Å–∏–∏. –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${sessionFiles.get(session).length}`)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –≤ –ë–î
        await saveFileToDB(session, uploadedFileId, file.originalname, file.size, file.mimetype)
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –≤ —Ç–µ–∫—Å—Ç
        // Code Interpreter –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É —á–µ—Ä–µ–∑ file_id –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        messageContent[0].text += `\n\n[–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–π–ª ID: ${uploadedFileId}, –Ω–∞–∑–≤–∞–Ω–∏–µ: ${file.originalname}]`
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:`, error)
        messageContent[0].text += `\n\n[–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: ${file.originalname}]`
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMessage = { role: 'user', content: messageContent }
    history.push(userMessage)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    const messageOrder = history.length
    await saveMessageToDB(session, 'user', messageContent, messageOrder)
    
    const runner = new Runner({})

    console.log(`üí∞ –ó–∞–ø—É—Å–∫ Investment Agent...`)
    console.log(`üìö –ò—Å—Ç–æ—Ä–∏—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞: ${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      
      const startTime = Date.now()
      console.log(`‚è±Ô∏è –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞: ${new Date().toLocaleTimeString()}`)
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª, —Å–æ–∑–¥–∞–µ–º Code Interpreter —Å —Ñ–∞–π–ª–æ–º
      let agentToRun = investmentAgent
      if (uploadedFileId) {
        console.log(`üìé –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Code Interpreter: ${uploadedFileId}`)
        agentToRun = new Agent({
          ...investmentAgent,
          tools: [codeInterpreterTool({ container: { type: 'auto', file_ids: [uploadedFileId] } })]
        })
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º (120 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤)
      // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é - –Ω–µ –º–æ–∂–µ–º –æ–±—Ä–µ–∑–∞—Ç—å –∏–∑-–∑–∞ reasoning items –≤ gpt-5
      const timeoutPromise = new Promise((_, reject) => 
        setTimeout(() => reject(new Error('Agent timeout (120s)')), 120000)
      )
      
      let inv
      try {
        inv = await Promise.race([
          runner.run(agentToRun, [...history]),
          timeoutPromise
        ])
      } catch (error) {
        if (error.message.includes('timeout')) {
          console.error('‚è∞ –ê–≥–µ–Ω—Ç –ø—Ä–µ–≤—ã—Å–∏–ª —Ç–∞–π–º–∞—É—Ç 120 —Å–µ–∫—É–Ω–¥')
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ok: true —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
          return res.json({
            ok: true,
            message: '–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ: –Ω–∞–ø–∏—à–∏—Ç–µ "–¥–∞" –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.',
            sessionId: session
          })
        }
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∫–≤–æ—Ç—ã OpenAI
        if (error.status === 429 || error.code === 'insufficient_quota') {
          console.error('üí≥ OpenAI –∫–≤–æ—Ç–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞')
          return res.json({
            ok: false,
            message: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            sessionId: session
          })
        }
        throw error
      }
      
      const duration = ((Date.now() - startTime) / 1000).toFixed(2)
      console.log(`‚è±Ô∏è –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${duration}s`)
      console.log(`ü§ñ –ê–≥–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª: ${inv.newItems.length} –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞
      let agentMessage = '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö'
      
      // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞
      for (let i = inv.newItems.length - 1; i >= 0; i--) {
        const item = inv.newItems[i]
        if (item.rawItem?.role === 'assistant' && item.rawItem?.content?.[0]?.text) {
          agentMessage = item.rawItem.content[0].text
          break
        }
      }
      
      console.log(`üí¨ –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞: "${agentMessage}"`)
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
      const newItems = inv.newItems.map(item => item.rawItem)
      history.push(...newItems)
      console.log(`üíæ –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –≤ –ë–î
      for (let index = 0; index < newItems.length; index++) {
        const item = newItems[index]
        const messageOrder = history.length - newItems.length + index + 1
        await saveMessageToDB(session, item.role, item.content, messageOrder)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∑–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
      const isFinalMessage = agentMessage.includes('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ') || 
                            agentMessage.includes('–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã iKapitalist')
      
      if (isFinalMessage) {
        console.log(`‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç...`)
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É)
        setImmediate(async () => {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º allFiles –≤ –Ω–∞—á–∞–ª–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ catch –±–ª–æ–∫–µ
          let allFiles = []
          
          try {
            // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –ë–î –≤–º–µ—Å—Ç–æ –ø–∞–º—è—Ç–∏
            const { rows: dbFiles } = await pool.query(
              `SELECT file_id, original_name, file_size, mime_type, uploaded_at FROM files WHERE session_id = $1 ORDER BY uploaded_at ASC`,
              [session]
            )
            
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
            allFiles = dbFiles.map(f => ({
              fileId: f.file_id,
              originalName: f.original_name,
              size: f.file_size,
              uploadedAt: f.uploaded_at
            }))
            
            if (allFiles.length === 0) {
              console.log(`‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ –ë–î`)
              return
            }
            
            console.log(`üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å ${allFiles.length} —Ñ–∞–π–ª–∞–º–∏...`)
            console.log(`üìé –§–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:`, allFiles)
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ fileId –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∞–≥–µ–Ω—Ç–∞
            const fileIds = allFiles.map(f => f.fileId)
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
            let amount = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
            let termMonths = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let purpose = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
            let bin = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let name = '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
            let email = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let phone = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            
            // –ü–∞—Ä—Å–∏–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            const historyText = history.map(msg => {
              if (typeof msg.content === 'string') return msg.content
              if (Array.isArray(msg.content)) return msg.content.map(c => c.text || '').join(' ')
              return ''
            }).join(' ')
            
            // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
            const amountMatch = historyText.match(/(\d+)\s*–º–∏–ª/i)
            if (amountMatch) amount = `${amountMatch[1]} –º–ª–Ω KZT`
            
            // –ò—â–µ–º —Å—Ä–æ–∫ - —Å–Ω–∞—á–∞–ª–∞ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç
            for (let i = 0; i < history.length; i++) {
              const msg = history[i]
              if (msg.role === 'assistant') {
                const assistantText = typeof msg.content === 'string' 
                  ? msg.content 
                  : (Array.isArray(msg.content) ? msg.content.map(c => c.text || '').join(' ') : '')
                
                // –ï—Å–ª–∏ –∞–≥–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Å—Ä–æ–∫–µ
                if (assistantText.match(/—Å—Ä–æ–∫|–º–µ—Å—è—Ü/i)) {
                  // –ë–µ—Ä–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  if (i + 1 < history.length && history[i + 1].role === 'user') {
                    const userResponse = typeof history[i + 1].content === 'string'
                      ? history[i + 1].content
                      : (Array.isArray(history[i + 1].content) ? history[i + 1].content.map(c => c.text || '').join(' ') : '')
                    
                    // –ò—â–µ–º —á–∏—Å–ª–æ –≤ –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const numberMatch = userResponse.match(/(\d+)/)
                    if (numberMatch) {
                      termMonths = `${numberMatch[1]} –º–µ—Å—è—Ü–µ–≤`
                      break
                    }
                  }
                }
              }
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            if (termMonths === '–Ω–µ —É–∫–∞–∑–∞–Ω') {
              const termMatch = historyText.match(/(\d+)\s*–º–µ—Å—è—Ü/i) || 
                               historyText.match(/—Å—Ä–æ–∫[:\s]*(\d+)/i) ||
                               historyText.match(/(\d+)\s*–º–µ—Å/i) ||
                               historyText.match(/—Å—Ä–æ–∫[^0-9]*(\d+)/i)
              if (termMatch) termMonths = `${termMatch[1]} –º–µ—Å—è—Ü–µ–≤`
            }
            
            const binMatch = historyText.match(/\b(\d{12})\b/)
            if (binMatch) bin = binMatch[1]
            
            // –ò—â–µ–º —Ü–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏–∏
            // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
            for (let i = 0; i < history.length; i++) {
              const msg = history[i]
              if (msg.role === 'assistant') {
                const assistantText = typeof msg.content === 'string' 
                  ? msg.content 
                  : (Array.isArray(msg.content) ? msg.content.map(c => c.text || '').join(' ') : '')
                
                // –ï—Å–ª–∏ –∞–≥–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Ü–µ–ª–∏
                if (assistantText.match(/–¥–ª—è —á–µ–≥–æ|—Ü–µ–ª[—å–∏]|–ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ/i)) {
                  // –ë–µ—Ä–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  if (i + 1 < history.length && history[i + 1].role === 'user') {
                    const userResponse = typeof history[i + 1].content === 'string'
                      ? history[i + 1].content
                      : (Array.isArray(history[i + 1].content) ? history[i + 1].content.map(c => c.text || '').join(' ') : '')
                    
                    // –û—á–∏—â–∞–µ–º –æ—Ç —Å–ª—É–∂–µ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–∞—Ö –∏ –¥–∞—Ç–∞—Ö
                    purpose = userResponse
                      .replace(/\[–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–π–ª.*?\]/g, '')
                      .replace(/\[–î–ê–¢–ê:.*?\]/g, '')
                      .replace(/^\s*\[.*?\]\s*/g, '') // –£–±–∏—Ä–∞–µ–º –ª—é–±—ã–µ [—Å–∫–æ–±–∫–∏] –≤ –Ω–∞—á–∞–ª–µ
                      .trim()
                    if (purpose) break
                  }
                }
              }
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            if (purpose === '–Ω–µ —É–∫–∞–∑–∞–Ω–∞') {
              const purposeKeywords = ['–Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å', '—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ', '–æ–±–æ—Ä–æ—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ']
              for (const keyword of purposeKeywords) {
                if (historyText.toLowerCase().includes(keyword)) {
                  purpose = keyword
                  break
                }
              }
            }
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ –ü–û–°–õ–ï–î–ù–ï–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const lastUserMessage = [...history].reverse().find(msg => msg.role === 'user')
            if (lastUserMessage) {
              const contactText = typeof lastUserMessage.content === 'string' 
                ? lastUserMessage.content 
                : (Array.isArray(lastUserMessage.content) 
                  ? lastUserMessage.content.map(c => c.text || '').join(' ') 
                  : '')
              
              const emailMatch = contactText.match(/([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/i)
              if (emailMatch) email = emailMatch[1]
              
              const phoneMatch = contactText.match(/(\+?\d[\d\s-]{9,})/g)
              if (phoneMatch) phone = phoneMatch[phoneMatch.length - 1]
              
              const nameMatch = contactText.match(/([–ê-–Ø–∞-—è–Å—ë]+\s+[–ê-–Ø–∞-—è–Å—ë]+)/i)
              if (nameMatch) name = nameMatch[1]
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "generating"
            const filesData = JSON.stringify(allFiles)
            await pool.query(
              `INSERT INTO reports (session_id, company_bin, amount, term, purpose, name, email, phone, files_count, files_data, status)
               VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,'generating')
               ON CONFLICT (session_id) DO UPDATE SET company_bin=EXCLUDED.company_bin, amount=EXCLUDED.amount, term=EXCLUDED.term, purpose=EXCLUDED.purpose, name=EXCLUDED.name, email=EXCLUDED.email, phone=EXCLUDED.phone, files_count=EXCLUDED.files_count, files_data=EXCLUDED.files_data, status='generating'`,
              [session, bin, amount, termMonths, purpose, name, email, phone, allFiles.length, filesData]
            )
            console.log(`üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î: ${session}, —Ñ–∞–π–ª–æ–≤: ${allFiles.length}`)
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            const reportRequest = `–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –≤—ã–ø–∏—Å–æ–∫.

–î–ê–ù–ù–´–ï –ó–ê–Ø–í–ö–ò:
- –ö–æ–º–ø–∞–Ω–∏—è (–ë–ò–ù): ${bin}
- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞: ${amount}
- –°—Ä–æ–∫: ${termMonths}
- –¶–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è: ${purpose}
- –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${name}, ${email}, ${phone}

–ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å–µ ${allFiles.length} –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏ (—Ñ–∞–π–ª—ã —É–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã) –∏ —Å–æ–∑–¥–∞–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏–∑ —Ç–≤–æ–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.`
            
            console.log(`üìù –ó–∞–ø—Ä–æ—Å –∫ –∞–≥–µ–Ω—Ç—É:`)
            console.log(reportRequest)
            console.log(`\n‚è±Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º Financial Analyst Agent...`)
            
            const startAnalysis = Date.now()
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ (PDF –∞–Ω–∞–ª–∏–∑ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–ª–≥–∏–º)
            const TIMEOUT_MS = 30 * 60 * 1000 // 30 –º–∏–Ω—É—Ç
            const analysisTimeout = new Promise((_, reject) =>
              setTimeout(() => reject(new Error(`Financial Analyst timeout (${TIMEOUT_MS/1000}s)`)), TIMEOUT_MS)
            )
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            const startProgressLogger = () => {
              let elapsed = 0
              const intervalId = setInterval(() => {
                elapsed += 60
                console.log(`‚è∞ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞: –ø—Ä–æ—à–ª–æ ${elapsed} —Å–µ–∫—É–Ω–¥...`)
              }, 60000) // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
              
              return () => clearInterval(intervalId)
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Financial Analyst Agent —á–µ—Ä–µ–∑ Agents SDK
            const runWithAgentSDK = async () => {
              console.log(`üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Financial Analyst Agent —á–µ—Ä–µ–∑ Agents SDK...`)
              
              // –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º
              const analystWithFiles = new Agent({
                ...financialAnalystAgent,
                tools: [codeInterpreterTool({ 
                  container: { 
                    type: 'auto', 
                    file_ids: fileIds 
                  } 
                })]
              })
              console.log(`‚úÖ Financial Analyst Agent —Å–æ–∑–¥–∞–Ω —Å —Ñ–∞–π–ª–∞–º–∏ (model: ${financialAnalystAgent.model})`)
              
              // –°–æ–∑–¥–∞–µ–º Runner
              const reportRunner = new Runner({})
              
              // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
              const stopLogger = startProgressLogger()
              
              console.log(`‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º: "${reportRequest.substring(0, 100)}..."`)
              
              try {
                // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const result = await reportRunner.run(analystWithFiles, [{
                  role: 'user',
                  content: [{ type: 'input_text', text: reportRequest }]
                }])
                
                stopLogger()
                console.log(`‚úÖ Agent completed! –ü–æ–ª—É—á–µ–Ω–æ ${result.newItems.length} –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
                
                return result
              } catch (error) {
                stopLogger()
                throw error
              }
            }
            
            console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Financial Analyst Agent...`)
            console.log(`üîÑ –ù–∞—á–∏–Ω–∞–µ–º runWithAgentSDK —á–µ—Ä–µ–∑ Agents SDK...`)
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            const reportResult = await Promise.race([
              runWithAgentSDK(),
              analysisTimeout
            ])
            
            console.log(`‚úÖ Financial Analyst Agent –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ`)
            const analysisTime = ((Date.now() - startAnalysis) / 1000).toFixed(2)
            console.log(`‚è±Ô∏è –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${analysisTime}s`)
            console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${reportResult.newItems.length}`)
            console.log(`‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –æ—Ç OpenAI`)
            
            // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.log(`üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ (newItems: ${reportResult.newItems?.length || 0}):`)
            
            // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            reportResult.newItems?.forEach((item, i) => {
              console.log(`\nüì¶ –≠–ª–µ–º–µ–Ω—Ç ${i}:`)
              console.log(`  - role: ${item.rawItem?.role}`)
              console.log(`  - content type: ${Array.isArray(item.rawItem?.content) ? 'array' : typeof item.rawItem?.content}`)
              
              if (Array.isArray(item.rawItem?.content)) {
                item.rawItem.content.forEach((c, ci) => {
                  console.log(`  - content[${ci}].type: ${c?.type}`)
                  if (c?.type === 'text') {
                    console.log(`  - content[${ci}].text length: ${c?.text?.length || 0}`)
                    if (c?.text && typeof c.text === 'string') {
                      console.log(`  - content[${ci}].text preview: ${c.text.substring(0, 100)}...`)
                    } else if (c?.text && typeof c.text === 'object') {
                      console.log(`  - content[${ci}].text is object: ${JSON.stringify(c.text).substring(0, 100)}...`)
                    } else {
                      console.log(`  - content[${ci}].text type: ${typeof c.text}`)
                    }
                  }
                })
              } else if (typeof item.rawItem?.content === 'string') {
                console.log(`  - content (string) length: ${item.rawItem.content.length}`)
                console.log(`  - content preview: ${item.rawItem.content.substring(0, 100)}...`)
              }
            })
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç—á–µ—Ç - –ø—Ä–æ–±—É–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            let report = null
            
            // –í–∞—Ä–∏–∞–Ω—Ç 1: –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π assistant message —Å —Ç–µ–∫—Å—Ç–æ–º
            for (let i = reportResult.newItems.length - 1; i >= 0; i--) {
              const item = reportResult.newItems[i]
              if (item.rawItem?.role === 'assistant') {
                console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç ${i} (assistant):`)
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã content
                if (Array.isArray(item.rawItem.content)) {
                  // content - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
                  for (const contentItem of item.rawItem.content) {
                    if (contentItem?.type === 'text' && contentItem?.text) {
                      if (typeof contentItem.text === 'string') {
                        report = contentItem.text
                        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç (text type) –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}, –¥–ª–∏–Ω–∞: ${report.length} —Å–∏–º–≤–æ–ª–æ–≤`)
                        break
                      } else if (typeof contentItem.text === 'object' && contentItem.text.value) {
                        report = contentItem.text.value
                        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç (text.value) –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}, –¥–ª–∏–Ω–∞: ${report.length} —Å–∏–º–≤–æ–ª–æ–≤`)
                        break
                      } else {
                        console.log(`‚ö†Ô∏è contentItem.text –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π: ${typeof contentItem.text}`)
                      }
                    }
                  }
                } else if (typeof item.rawItem.content === 'string') {
                  // content - —Å—Ç—Ä–æ–∫–∞
                  report = item.rawItem.content
                  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç (string) –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}, –¥–ª–∏–Ω–∞: ${report.length} —Å–∏–º–≤–æ–ª–æ–≤`)
                }
                
                if (report) break
              }
            }
            
            // –í–∞—Ä–∏–∞–Ω—Ç 2: –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ content.value
            if (!report) {
              console.log(`‚ö†Ô∏è –í–∞—Ä–∏–∞–Ω—Ç 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏ (content.text.value)...`)
              for (let i = reportResult.newItems.length - 1; i >= 0; i--) {
                const item = reportResult.newItems[i]
                if (item.rawItem?.role === 'assistant' && item.rawItem.content) {
                  for (const content of item.rawItem.content) {
                    if (content.type === 'text' && content.text?.value) {
                      report = content.text.value
                      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç —á–µ—Ä–µ–∑ text.value –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}`)
                      break
                    }
                  }
                  if (report) break
                }
              }
            }
            
            // –í–∞—Ä–∏–∞–Ω—Ç 3: –µ—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Å–µ—Ö assistant messages
            if (!report && reportResult.newItems.length > 0) {
              console.log(`‚ö†Ô∏è –í–∞—Ä–∏–∞–Ω—Ç 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª. –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—Å–µ—Ö assistant messages:`)
              reportResult.newItems.forEach((item, i) => {
                if (item.rawItem?.role === 'assistant') {
                  console.log(`\n--- Assistant message ${i} ---`)
                  console.log(JSON.stringify(item.rawItem, null, 2))
                }
              })
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (!report) {
              report = '–û—Ç—á–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω - –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∞–≥–µ–Ω—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.'
              console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –æ—Ç—á–µ—Ç –∏–∑ ${reportResult.newItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ –ë–î
            console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ –ë–î...`)
            console.log(`üìù –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: ${report ? report.length : 0} —Å–∏–º–≤–æ–ª–æ–≤`)
            
            const updateResult = await pool.query(
              `UPDATE reports SET report_text = $1, status = 'completed', completed_at = NOW() WHERE session_id = $2`,
              [report, session]
            )
            console.log(`üíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î –¥–ª—è —Å–µ—Å—Å–∏–∏: ${session}, –∏–∑–º–µ–Ω–µ–Ω–æ —Å—Ç—Ä–æ–∫: ${updateResult.rowCount}`)
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
            const { rows: checkRows } = await pool.query('SELECT status, LENGTH(report_text) as report_length FROM reports WHERE session_id = $1',[session])
            const checkResult = checkRows[0]
            console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î: —Å—Ç–∞—Ç—É—Å=${checkResult?.status}, –¥–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞=${checkResult?.report_length}`)
            
            console.log(`‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î –¥–ª—è —Å–µ—Å—Å–∏–∏ ${session}`)
            console.log(`üìä ========== –û–¢–ß–ï–¢ –î–õ–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê ==========`)
            console.log(report.substring(0, 500) + '...')
            console.log(`üìä ==========================================\n`)
            
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:`, error.message)
            console.error(`‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:`, error.stack)
            
            // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç ‚Äî –ù–ï –ø–æ–º–µ—á–∞–µ–º –æ—Ç—á–µ—Ç –∫–∞–∫ error, –æ—Å—Ç–∞–≤–ª—è–µ–º status=generating.
            // –ê–≥–µ–Ω—Ç –º–æ–≥ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ OpenAI, –∏ –æ—Ç—á–µ—Ç –ø—Ä–∏–¥–µ—Ç –ø–æ–∑–∂–µ.
            if (String(error.message || '').includes('timeout')) {
              console.warn('‚è≥ Financial Analyst –Ω–µ —É—Å–ø–µ–ª –∑–∞ —Ç–∞–π–º–∞—É—Ç. –°—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–≤–ª–µ–Ω generating, –æ—Ç—á–µ—Ç –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –ø–æ–∑–∂–µ.')
            } else {
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É –≤ –ë–î
              await pool.query(
                `UPDATE reports SET report_text = $1, status = 'error', completed_at = NOW() WHERE session_id = $2`,
                [`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: ${error.message}`, session]
              )
            }
          }
        })
      }
      
      return res.json({ 
        ok: true, 
        message: agentMessage,
        sessionId: session,
        completed: isFinalMessage  // –§–ª–∞–≥ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
      })
  } catch (e) {
    console.error('agents error', e)
    return res.status(500).json({ ok: false, error: String(e) })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ session_id
app.get('/api/reports/:sessionId', async (req, res) => {
  const { sessionId } = req.params
  
  console.log(`üìä –ó–∞–ø—Ä–æ—Å –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏: ${sessionId}`)
  
  try {
    const { rows } = await pool.query('SELECT * FROM reports WHERE session_id = $1', [sessionId])
    const report = rows[0]
    
    if (!report) {
      console.log(`‚ö†Ô∏è –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–µ—Å—Å–∏–∏ ${sessionId}`)
      return res.json({
        ok: false,
        message: '–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      })
    }
    
    console.log(`‚úÖ –û—Ç—á–µ—Ç –Ω–∞–π–¥–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${report.status}`)
    return res.json({
      ok: true,
      report: {
        sessionId: report.session_id,
        bin: report.company_bin,
        amount: report.amount,
        term: report.term,
        purpose: report.purpose,
        name: report.name,
        email: report.email,
        phone: report.phone,
        filesCount: report.files_count,
        status: report.status,
        reportText: report.report_text,
        createdAt: report.created_at,
        completedAt: report.completed_at
      }
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–∏
app.get('/api/sessions/:sessionId/history', async (req, res) => {
  const { sessionId } = req.params
  console.log(`üìñ –ó–∞–ø—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–∏: ${sessionId}`)
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ë–î
    const history = await getMessagesFromDB(sessionId)
    
    if (!history || history.length === 0) {
      console.log(`‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –¥–ª—è —Å–µ—Å—Å–∏–∏: ${sessionId}`)
      return res.status(404).json({
        ok: false,
        message: '–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      })
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    const messages = []
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messages.push({
      id: 1,
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
      sender: 'bot',
      timestamp: new Date()
    })
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ë–î
    history.forEach((item, index) => {
      if (item.role === 'user') {
        let text = ''
        if (typeof item.content === 'string') {
          text = item.content
        } else if (Array.isArray(item.content)) {
          text = item.content.map(c => c.text || '').join(' ')
        }
        
        messages.push({
          id: Date.now() + index * 2,
          text: text,
          sender: 'user',
          timestamp: new Date()
        })
      } else if (item.role === 'assistant') {
        let text = ''
        if (typeof item.content === 'string') {
          text = item.content
        } else if (Array.isArray(item.content)) {
          text = item.content.map(c => c.text || '').join(' ')
        }
        
        if (text) {
          messages.push({
            id: Date.now() + index * 2 + 1,
            text: text,
            sender: 'bot',
            timestamp: new Date()
          })
        }
      }
    })
    
    console.log(`‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –ë–î: ${messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
    return res.json({
      ok: true,
      messages: messages
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–∏
app.get('/api/sessions/:sessionId/files', async (req, res) => {
  const { sessionId } = req.params
  console.log(`üìé –ó–∞–ø—Ä–æ—Å —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–µ—Å—Å–∏–∏: ${sessionId}`)
  
  try {
    const { rows: files } = await pool.query(
      `SELECT file_id, original_name, file_size, mime_type, uploaded_at FROM files WHERE session_id = $1 ORDER BY uploaded_at ASC`,
      [sessionId]
    )
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–µ—Å—Å–∏–∏ ${sessionId}: ${files.length}`)
    return res.json({
      ok: true,
      files: files.map(f => ({
        fileId: f.file_id,
        originalName: f.original_name,
        fileSize: f.file_size,
        mimeType: f.mime_type,
        uploadedAt: f.uploaded_at
      }))
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ (–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
app.get('/api/reports', async (req, res) => {
  try {
    const { rows: reports } = await pool.query(
      `SELECT session_id, company_bin, amount, term, purpose, name, email, phone, status, files_count, created_at, completed_at FROM reports ORDER BY created_at DESC`
    )
    
    console.log(`üìã –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫: ${reports.length} —à—Ç.`)
    return res.json({
      ok: true,
      reports: reports.map(r => ({
        sessionId: r.session_id,
        bin: r.company_bin,
        amount: r.amount,
        term: r.term,
        purpose: r.purpose,
        name: r.name,
        email: r.email,
        phone: r.phone,
        filesCount: r.files_count,
        status: r.status,
        createdAt: r.created_at,
        completedAt: r.completed_at
      }))
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

const PORT = process.env.PORT || 8787
app.listen(PORT, () => {
  console.log(`[server] agents listening on ${PORT}`)
  console.log(`[server] API key present: ${!!process.env.OPENAI_API_KEY}`)
})

// Keep server alive
process.on('SIGTERM', () => {
  console.log('[server] SIGTERM received, shutting down gracefully')
  process.exit(0)
})

process.on('SIGINT', () => {
  console.log('[server] SIGINT received, shutting down gracefully')
  process.exit(0)
})


