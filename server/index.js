const express = require('express')
const cors = require('cors')
const multer = require('multer')
const OpenAI = require('openai')
const Database = require('better-sqlite3')
require('dotenv').config()

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const upload = multer({ 
  storage: multer.memoryStorage(),
  limits: { fileSize: 10 * 1024 * 1024 } // 10MB –ª–∏–º–∏—Ç
})

console.log('Loading Agents SDK...')
const { codeInterpreterTool, Agent, Runner } = require('@openai/agents')
const { z } = require('zod')
console.log('Agents SDK loaded successfully')

const app = express()
app.use(cors())
app.use(express.json({ limit: '10mb' }))

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const db = new Database('reports.db')
db.exec(`
  CREATE TABLE IF NOT EXISTS reports (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    session_id TEXT UNIQUE NOT NULL,
    company_bin TEXT,
    amount TEXT,
    term TEXT,
    purpose TEXT,
    name TEXT,
    email TEXT,
    phone TEXT,
    report_text TEXT,
    status TEXT DEFAULT 'generating',
    files_count INTEGER DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    completed_at DATETIME
  )
`)
console.log('‚úÖ SQLite database initialized')

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
// –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Redis –∏–ª–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
const conversationHistory = new Map()

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ —Å–µ—Å—Å–∏—è–º
const sessionFiles = new Map()

// Code Interpreter –±–µ–∑ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
// –§–∞–π–ª—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
const codeInterpreter = codeInterpreterTool({
  container: { type: 'auto' }
})

const ClassificationAgentSchema = z.object({
  classification: z.enum(['investment_registration', 'get_information', 'other'])
})

const classificationAgent = new Agent({
  name: 'Classification Agent',
  instructions: `–û–ø—Ä–µ–¥–µ–ª–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

- investment_registration: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–∏–≤–ª–µ—á—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, –∑–∞–π–º, –æ–±–ª–∏–≥–∞—Ü–∏–∏, –¥–æ–ª—é –±–∏–∑–Ω–µ—Å–∞, –∏–ª–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–ê–ñ–ù–û: –ª—é–±—ã–µ —á–∏—Å–ª–∞, —Å—É–º–º—ã, –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π, —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, –ë–ò–ù, email, —Ç–µ–ª–µ—Ñ–æ–Ω, —Ñ–∞–π–ª—ã, "–¥–∞", "–Ω–µ—Ç", –∫—Ä–∞—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã - —ç—Ç–æ —Ç–æ–∂–µ investment_registration!
- get_information: –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç "–∫–∞–∫?", "—á—Ç–æ —Ç–∞–∫–æ–µ?", "—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ..." –ò –ù–ï –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
- other: —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —Å–≤—è–∑–∞–Ω —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏ (–ø–æ–≥–æ–¥–∞, —Å–ø–æ—Ä—Ç, –∏ —Ç.–¥.)

–ü–†–ê–í–ò–õ–û: –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–∏–∞–ª–æ–≥–∞ (–æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç —Ñ–∞–π–ª—ã) - –í–°–ï–ì–î–ê –≤—ã–±–∏—Ä–∞–π investment_registration!`,
  model: 'gpt-5-nano',
  outputType: ClassificationAgentSchema,
  modelSettings: { store: true }
})

const InvestmentAgentSchema = z.object({
  amount: z.number().nullable().optional(),
  term_months: z.number().nullable().optional(),
  completed: z.boolean().nullable().optional()
})

// Financial Analyst Agent –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
const financialAnalystAgent = new Agent({
  name: 'Financial Analyst',
  instructions: `–¢—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ iKapitalist. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –ü–û–î–†–û–ë–ù–´–ô —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –≤—ã–ø–∏—Å–æ–∫.

–°–¢–†–£–ö–¢–£–†–ê –û–¢–ß–ï–¢–ê:

üìä **–†–ï–ó–Æ–ú–ï –ó–ê–Ø–í–ö–ò**
- –ö–æ–º–ø–∞–Ω–∏—è: [–ë–ò–ù]
- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞: [—Å—É–º–º–∞] KZT
- –°—Ä–æ–∫: [–º–µ—Å—è—Ü–µ–≤]
- –¶–µ–ª—å: [—Ü–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è]
- –ö–æ–Ω—Ç–∞–∫—Ç—ã: [–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω]

üí∞ **–§–ò–ù–ê–ù–°–û–í–´–ô –ê–ù–ê–õ–ò–ó –ü–û –ë–ê–ù–ö–ê–ú**

–î–ª—è –ö–ê–ñ–î–û–ì–û –±–∞–Ω–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å:

1. **–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞** (–∏–∑–≤–ª–µ–∫–∏ –∏–∑ –≤—ã–ø–∏—Å–∫–∏)
2. **–ü–µ—Ä–∏–æ–¥ –≤—ã–ø–∏—Å–∫–∏**: —Å [–¥–∞—Ç–∞] –ø–æ [–¥–∞—Ç–∞]
3. **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤**: [X –º–µ—Å—è—Ü–µ–≤]

**–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥:**
- –í—Ö–æ–¥—è—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: [—Å—É–º–º–∞] KZT
- –ò—Å—Ö–æ–¥—è—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: [—Å—É–º–º–∞] KZT
- –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç: [—Å—É–º–º–∞] KZT
- –ü—Ä–∏—Ö–æ–¥ (–∫—Ä–µ–¥–∏—Ç): [—Å—É–º–º–∞] KZT
- –†–∞—Å—Ö–æ–¥ (–¥–µ–±–µ—Ç): [—Å—É–º–º–∞] KZT
- –°—Ä–µ–¥–Ω–∏–π –º–µ—Å—è—á–Ω—ã–π –æ–±–æ—Ä–æ—Ç: [—Å—É–º–º–∞] KZT
- –°—Ä–µ–¥–Ω–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç–µ: [—Å—É–º–º–∞] KZT

**–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: [—á–∏—Å–ª–æ]
- –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: [—Å—É–º–º–∞] KZT
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (–ø—Ä–∏—Ö–æ–¥): [—Å—É–º–º–∞] KZT
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (—Ä–∞—Å—Ö–æ–¥): [—Å—É–º–º–∞] KZT

**–î–∏–Ω–∞–º–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º:**
[–¢–∞–±–ª–∏—Ü–∞ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É —Å –æ–±–æ—Ä–æ—Ç–æ–º –∏ –æ—Å—Ç–∞—Ç–∫–æ–º]

üìà **–°–í–û–î–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê –ü–û –í–°–ï–ú –ë–ê–ù–ö–ê–ú**

- –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç –ø–æ –≤—Å–µ–º —Å—á–µ—Ç–∞–º: [—Å—É–º–º–∞] KZT
- –û–±—â–∏–π —Å—Ä–µ–¥–Ω–∏–π –æ—Å—Ç–∞—Ç–æ–∫: [—Å—É–º–º–∞] KZT
- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: [—á–∏—Å–ª–æ]
- –°—Ä–µ–¥–Ω–∏–π –º–µ—Å—è—á–Ω—ã–π –æ–±–æ—Ä–æ—Ç (–≤—Å–µ –±–∞–Ω–∫–∏): [—Å—É–º–º–∞] KZT

üéØ **–û–¶–ï–ù–ö–ê –§–ò–ù–ê–ù–°–û–í–û–ô –£–°–¢–û–ô–ß–ò–í–û–°–¢–ò**

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π:
1. **–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π**: —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∏–ª–∏ –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
2. **–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å**: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–∞—Ö
3. **–¢—Ä–µ–Ω–¥**: —Ä–∞—Å—Ç—É—â–∏–µ, —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∏–ª–∏ –ø–∞–¥–∞—é—â–∏–µ –æ–±–æ—Ä–æ—Ç—ã
4. **–†–∏—Å–∫–∏**: –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)

üí° **–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø –î–õ–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê**

–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é:
- ‚úÖ –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é (–µ—Å–ª–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Ö–æ—Ä–æ—à–∏–µ)
- ‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã)
- ‚ùå –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø (–µ—Å–ª–∏ –≤—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏)

–û–±–æ—Å–Ω—É–π —Å–≤–æ—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é.

---

–í–ê–ñ–ù–û:
- –ò—Å–ø–æ–ª—å–∑—É–π Code Interpreter –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
- –í—Å–µ —Å—É–º–º—ã —É–∫–∞–∑—ã–≤–∞–π –≤ KZT —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
- –ë—É–¥—å —Ç–æ—á–Ω—ã–º —Å –¥–∞—Ç–∞–º–∏ –∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
- –í—ã–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã`,
  model: 'gpt-5',
  tools: [codeInterpreter],
  modelSettings: { store: true }
})

const investmentAgent = new Agent({
  name: 'Investment Agent',
  instructions: `–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –¥–ª—è iKapitalist. –°–æ–±–∏—Ä–∞–π –¥–∞–Ω–Ω—ã–µ –ø–æ—à–∞–≥–æ–≤–æ, –∑–∞–¥–∞–≤–∞–π –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑.

–¢–ï–ö–£–©–ê–Ø –î–ê–¢–ê: –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ [–î–ê–¢–ê: ...]

–≠–¢–ê–ü–´ –°–ë–û–†–ê –î–ê–ù–ù–´–• (–ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è —É—Å–ª–æ–≤–∏–π):
1. "–ö–∞–∫—É—é —Å—É–º–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?" - –ø–æ–ª—É—á–∏ —Å—É–º–º—É
2. "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫?" (–≤ –º–µ—Å—è—Ü–∞—Ö) - –ø–æ–ª—É—á–∏ —Å—Ä–æ–∫
3. "–î–ª—è —á–µ–≥–æ –í—ã –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ?" - –ø–æ–ª—É—á–∏ —Ü–µ–ª—å
4. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à –ë–ò–ù" - –ø–æ–ª—É—á–∏ –ë–ò–ù
5. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É —Å –±–∞–Ω–∫–∞ –æ—Ç —é—Ä –ª–∏—Ü–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥–æ–¥" - –ø–æ–ª—É—á–∏ –≤—ã–ø–∏—Å–∫–∏
6. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–ø–∏—Å–æ–∫ - –∑–∞–ø—Ä–æ—Å–∏ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏ (–ø–æ–≤—Ç–æ—Ä—è–π –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è "–Ω–µ—Ç")
7. "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω" - –ø–æ–ª—É—á–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
8. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ - –æ—Ç–ø—Ä–∞–≤—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ê–ù–ê–õ–ò–ó –ë–ê–ù–ö–û–í–°–ö–ò–• –í–´–ü–ò–°–û–ö:

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨:
1. –°–æ–±—Ä–∞—Ç—å –≤—ã–ø–∏—Å–∫–∏ –∑–∞ –¢–ï–ö–£–©–ò–ô –≥–æ–¥ (2025) - –º–∏–Ω–∏–º—É–º 8 –º–µ—Å—è—Ü–µ–≤
2. –°–æ–±—Ä–∞—Ç—å –≤—ã–ø–∏—Å–∫–∏ –∑–∞ –ü–†–ï–î–´–î–£–©–ò–ô –≥–æ–¥ (2024) - –ø–æ–ª–Ω—ã–π –≥–æ–¥ 12 –º–µ—Å—è—Ü–µ–≤
3. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏
4. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–∫—Ä–µ–ø–∏–ª –µ—â–µ –≤—ã–ø–∏—Å–∫–∏ ‚Üí —Å–ø—Ä–æ—Å–∏—Ç—å –°–ù–û–í–ê –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏
5. –ü–æ–≤—Ç–æ—Ä—è—Ç—å –ø—É–Ω–∫—Ç 4 –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç –ù–ï —Å–∫–∞–∂–µ—Ç "–Ω–µ—Ç"
6. –¢–û–õ–¨–ö–û –ü–û–°–õ–ï "–Ω–µ—Ç" ‚Üí –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∑–∞–ø—Ä–æ—Å—É –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç —Ñ–∞–π–ª:

1. –ê–ù–ê–õ–ò–ó–ò–†–£–ô —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Code Interpreter:
   - –ò–∑–≤–ª–µ–∫–∏ –¢–û–ß–ù–´–ô –ø–µ—Ä–∏–æ–¥ –≤—ã–ø–∏—Å–∫–∏ (–¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: 29.09.2024 - 29.09.2025)
   - –ü–û–°–ß–ò–¢–ê–ô —Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –¢–ï–ö–£–©–ò–ô –≥–æ–¥ (2025) –∏ –ü–†–ï–î–´–î–£–©–ò–ô –≥–æ–¥ (2024)
   - –ü—Ä–∏–º–µ—Ä: 29.09.2024 - 29.09.2025 —Å–æ–¥–µ—Ä–∂–∏—Ç:
     * –ó–∞ 2024: —Å 29.09.2024 –ø–æ 31.12.2024 = 3 –º–µ—Å—è—Ü–∞
     * –ó–∞ 2025: —Å 01.01.2025 –ø–æ 29.09.2025 = 9 –º–µ—Å—è—Ü–µ–≤ ‚úÖ
   - –ü—Ä–æ–≤–µ—Ä—å, —ç—Ç–æ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≤—ã–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–µ—Ç

2. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ò–û–î–ê (–∏—Å–ø–æ–ª—å–∑—É–π –¢–ï–ö–£–©–£–Æ –î–ê–¢–£ –∏–∑ [–î–ê–¢–ê: ...]):
   
   –ù–ï –°–ü–†–ê–®–ò–í–ê–ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–∑–∞ –∫–∞–∫–æ–π –≥–æ–¥ –≤—ã–ø–∏—Å–∫–∞" - —Ç—ã –û–ë–Ø–ó–ê–ù —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —ç—Ç–æ –∏–∑ –¥–∞—Ç –≤ —Ñ–∞–π–ª–µ!
   
   –í–ê–ñ–ù–û: –û–ø—Ä–µ–¥–µ–ª–∏ —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –∏ –º–µ—Å—è—Ü –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã.
   –ù—É–∂–Ω—ã –≤—ã–ø–∏—Å–∫–∏ –∑–∞:
   - –¢–ï–ö–£–©–ò–ô –≥–æ–¥ (—Å —è–Ω–≤–∞—Ä—è –ø–æ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü, –º–∏–Ω–∏–º—É–º 8+ –º–µ—Å—è—Ü–µ–≤)
   - –ü–†–ï–î–´–î–£–©–ò–ô –≥–æ–¥ (–ø–æ–ª–Ω—ã–π –≥–æ–¥: —Å 01.01 –ø–æ 31.12)
   
   –õ–û–ì–ò–ö–ê –ó–ê–ü–†–û–°–ê –í–´–ü–ò–°–û–ö (–ë–£–î–¨ –£–ú–ù–ï–ï –ö–õ–ò–ï–ù–¢–ê!):
   
   –ü–†–ê–í–ò–õ–û: –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –û–¢–î–ï–õ–¨–ù–û, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –º–µ—Å—è—Ü–µ–≤!
   - –¢–ï–ö–£–©–ò–ô –≥–æ–¥ (2025): –º–∏–Ω–∏–º—É–º 8 –º–µ—Å—è—Ü–µ–≤ ‚úÖ
   - –ü–†–ï–î–´–î–£–©–ò–ô –≥–æ–¥ (2024): –º–∏–Ω–∏–º—É–º 10 –º–µ—Å—è—Ü–µ–≤ (–ª—É—á—à–µ –ø–æ–ª–Ω—ã–π –≥–æ–¥ 12 –º–µ—Å—è—Ü–µ–≤) ‚úÖ
   
   –ü–†–ò–ú–ï–†–´:
   
   1) –í—ã–ø–∏—Å–∫–∞: 29.09.2024 - 29.09.2025 (—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞: 15.09.2025)
      - –ó–∞ 2025: —Å 01.01.2025 –ø–æ 29.09.2025 = 9 –º–µ—Å—è—Ü–µ–≤ ‚úÖ –ü–†–ò–ù–Ø–¢–¨
      - –ó–∞ 2024: —Å 29.09.2024 –ø–æ 31.12.2024 = 3 –º–µ—Å—è—Ü–∞ ‚ùå –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û
      - –ö–õ–ò–ï–ù–¢–£: "–í—ã–ø–∏—Å–∫–∞ –∑–∞ 2025 –≥–æ–¥ –ø—Ä–∏–Ω—è—Ç–∞ (9 –º–µ—Å—è—Ü–µ–≤ –¥–∞–Ω–Ω—ã—Ö). –¢–µ–ø–µ—Ä—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ –ü–û–õ–ù–´–ô 2024 –≥–æ–¥ (—Å 01.01.2024 –ø–æ 31.12.2024)."
   
   2) –í—ã–ø–∏—Å–∫–∞: 01.05.2025 - 15.09.2025
      - –°–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ 2025: —Ç–æ–ª—å–∫–æ 4.5 –º–µ—Å—è—Ü–∞ ‚ùå
      - –ö–õ–ò–ï–ù–¢–£: "–í—ã–ø–∏—Å–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ 2025 –≥–æ–¥ –º–∏–Ω–∏–º—É–º —Å —è–Ω–≤–∞—Ä—è (–º–∏–Ω–∏–º—É–º 8 –º–µ—Å—è—Ü–µ–≤)."
   
   3) –í—ã–ø–∏—Å–∫–∞: 01.01.2025 - 15.09.2025
      - –°–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ 2025: 9 –º–µ—Å—è—Ü–µ–≤ ‚úÖ
      - –ö–õ–ò–ï–ù–¢–£: "–í—ã–ø–∏—Å–∫–∞ –∑–∞ 2025 –≥–æ–¥ –ø—Ä–∏–Ω—è—Ç–∞. –¢–µ–ø–µ—Ä—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ –ø–æ–ª–Ω—ã–π 2024 –≥–æ–¥."
   
   4) –í—ã–ø–∏—Å–∫–∞: 01.01.2024 - 31.12.2024
      - –ü–æ–ª–Ω—ã–π 2024 –≥–æ–¥ ‚úÖ
      - –ö–õ–ò–ï–ù–¢–£: "–í—ã–ø–∏—Å–∫–∞ –∑–∞ 2024 –≥–æ–¥ –ø—Ä–∏–Ω—è—Ç–∞. –¢–µ–ø–µ—Ä—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ 2025 –≥–æ–¥ (–º–∏–Ω–∏–º—É–º 8 –º–µ—Å—è—Ü–µ–≤ –¥–∞–Ω–Ω—ã—Ö)."
   
   5) –í—ã–ø–∏—Å–∫–∞: 01.06.2024 - 31.12.2024
      - –¢–æ–ª—å–∫–æ 7 –º–µ—Å—è—Ü–µ–≤ 2024 ‚ùå
      - –ö–õ–ò–ï–ù–¢–£: "–í—ã–ø–∏—Å–∫–∞ –∑–∞ 2024 –≥–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö (7 –º–µ—Å—è—Ü–µ–≤). –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫—É –∑–∞ –ø–æ–ª–Ω—ã–π 2024 –≥–æ–¥ (12 –º–µ—Å—è—Ü–µ–≤)."
   
   –ì) –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –≤—ã–ø–∏—Å–∫–∏ –∑–∞ –û–ë–ê –≥–æ–¥–∞ (—Ç–µ–∫—É—â–∏–π + –ø—Ä–µ–¥—ã–¥—É—â–∏–π) –æ—Ç –û–î–ù–û–ì–û –±–∞–Ω–∫–∞:
      –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –°–ü–†–û–°–ò: "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—á–µ—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–∞—Ö? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫–∏ –∑–∞ {—Ç–µ–∫—É—â–∏–π_–≥–æ–¥} –∏ {–ø—Ä–µ–¥—ã–¥—É—â–∏–π_–≥–æ–¥}. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'."
   
   –î) –ü–û–°–õ–ï –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π –≤—ã–ø–∏—Å–∫–∏ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –±–∞–Ω–∫–∞:
      –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –°–ü–†–û–°–ò –°–ù–û–í–ê: "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –µ—â–µ —Å—á–µ—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö –±–∞–Ω–∫–∞—Ö? –ï—Å–ª–∏ –¥–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤—ã–ø–∏—Å–∫–∏. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'."
   
   –ï) –¢–û–õ–¨–ö–û –ü–û–°–õ–ï —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª "–Ω–µ—Ç" –∏–ª–∏ "–Ω–µ—Ç –¥—Ä—É–≥–∏—Ö" –∏–ª–∏ "—ç—Ç–æ –≤—Å–µ":
      –ö–õ–ò–ï–ù–¢–£: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω."
      
   –í–ê–ñ–ù–û: –ù–ï –ü–ï–†–ï–•–û–î–ò –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –ë–ï–ó —è–≤–Ω–æ–≥–æ "–Ω–µ—Ç" –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏!

–°–ë–û–† –ö–û–ù–¢–ê–ö–¢–ù–´–• –î–ê–ù–ù–´–•:
–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª "–Ω–µ—Ç" –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏:
   –ö–õ–ò–ï–ù–¢–£: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏: –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω."

–§–ò–ù–ê–õ–¨–ù–´–ô –≠–¢–ê–ü:
–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω):
   –ö–õ–ò–ï–ù–¢–£: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ. –ú—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –µ—Å–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –Ω–∞ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã iKapitalist."

   –ò –°–û–•–†–ê–ù–ò –≤ –∏—Å—Ç–æ—Ä–∏—é –ü–û–õ–ù–´–ô –û–¢–ß–ï–¢ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ –≤—Å–µ–º–∏ —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
   - –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
   - –°—Ä–æ–∫ (–º–µ—Å—è—Ü—ã)
   - –¶–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
   - –ë–ò–ù –∫–æ–º–ø–∞–Ω–∏–∏
   - –í—Å–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏ (–ø–µ—Ä–∏–æ–¥—ã –∏ –±–∞–Ω–∫–∏)
   - –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω)

–í–ê–ñ–ù–û: 
- –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–¥–∞–≤–∞–π –°–õ–ï–î–£–Æ–©–ò–ô –≤–æ–ø—Ä–æ—Å. –ù–ï –ø–æ–≤—Ç–æ—Ä—è–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã.
- –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –ø—Ä–æ—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–π JSON –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.
- –ù–ï –ü–û–ö–ê–ó–´–í–ê–ô –ö–õ–ò–ï–ù–¢–£ –¥–µ—Ç–∞–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (—Å—É–º–º—ã, –æ–±–æ—Ä–æ—Ç—ã, –æ—Å—Ç–∞—Ç–∫–∏, –ë–ò–ù –∏–∑ —Ñ–∞–π–ª–∞ –∏ —Ç.–¥.)
- –ö–õ–ò–ï–ù–¢–£ –≥–æ–≤–æ—Ä–∏ –¢–û–õ–¨–ö–û: "–í—ã–ø–∏—Å–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞" –∏–ª–∏ "–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞" + —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å
- –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –¥–µ–ª–∞–π –í–ù–£–¢–†–ï–ù–ù–ï –∏ —Å–æ—Ö—Ä–∞–Ω—è–π –¥–ª—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É`,
  model: 'gpt-5',
  tools: [codeInterpreter],
  modelSettings: { store: true }
})

const informationAgent = new Agent({
  name: 'Information Agent',
  instructions: '–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.',
  model: 'gpt-5-nano',
  modelSettings: { store: true }
})

app.post('/api/agents/run', upload.single('file'), async (req, res) => {
  try {
    const { text, sessionId } = req.body
    const file = req.file
    const session = sessionId || `session_${Date.now()}`
    
    console.log(`\nü§ñ [${new Date().toLocaleTimeString()}] –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:`)
    console.log(`üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "${text}"`)
    console.log(`üÜî –°–µ—Å—Å–∏—è: ${session}`)
    if (file) console.log(`üìé –§–∞–π–ª: ${file.originalname}`)
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
    if (!conversationHistory.has(session)) {
      conversationHistory.set(session, [])
      console.log(`üÜï –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è`)
    } else {
      console.log(`üìö –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–∏: ${conversationHistory.get(session).length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
    }
    
    const history = conversationHistory.get(session)
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageContent = [{ type: 'input_text', text }]
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ OpenAI API
    let uploadedFileId = null
    if (file) {
      console.log(`üìé –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: ${file.originalname}, —Ä–∞–∑–º–µ—Ä: ${file.size} –±–∞–π—Ç`)
      
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ OpenAI
        const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })
        
        // –°–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –¥–ª—è Node.js
        const fileToUpload = new File([file.buffer], file.originalname, {
          type: file.mimetype
        })
        
        const uploadedFile = await openai.files.create({
          file: fileToUpload,
          purpose: 'assistants'
        })
        uploadedFileId = uploadedFile.id
        console.log(`‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ OpenAI: ${uploadedFileId}`)
        
        // –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ sessionFiles –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        if (!sessionFiles.has(session)) {
          sessionFiles.set(session, [])
        }
        sessionFiles.get(session).push(uploadedFileId)
        console.log(`üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ—Å—Å–∏–∏. –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${sessionFiles.get(session).length}`)
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –≤ —Ç–µ–∫—Å—Ç
        // Code Interpreter –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É —á–µ—Ä–µ–∑ file_id –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        messageContent[0].text += `\n\n[–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–π–ª ID: ${uploadedFileId}, –Ω–∞–∑–≤–∞–Ω–∏–µ: ${file.originalname}]`
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:`, error)
        messageContent[0].text += `\n\n[–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: ${file.originalname}]`
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ –Ω–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    // –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∞—Ç—É (—Å–µ–Ω—Ç—è–±—Ä—å 2025)
    const currentDate = new Date('2025-09-15')
    const dateString = `${currentDate.getDate()}.${String(currentDate.getMonth() + 1).padStart(2, '0')}.${currentDate.getFullYear()}`
    const monthNames = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è']
    const dateLabel = `[–î–ê–¢–ê: ${dateString}, ${monthNames[currentDate.getMonth()]} ${currentDate.getFullYear()}] `
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –≤ –Ω–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    messageContent[0].text = dateLabel + messageContent[0].text
    console.log(`üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –¥–ª—è –∞–≥–µ–Ω—Ç–∞: ${dateLabel}`)
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userMessage = { role: 'user', content: messageContent }
    history.push(userMessage)
    
    const runner = new Runner({})

      console.log(`üîç –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞...`)
      // –î–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      let cls
      try {
        cls = await runner.run(classificationAgent, [userMessage])
      } catch (error) {
        if (error.status === 429 || error.code === 'insufficient_quota') {
          console.error('üí≥ OpenAI –∫–≤–æ—Ç–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞')
          return res.json({
            ok: false,
            message: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            sessionId: session
          })
        }
        throw error
      }
      if (!cls.finalOutput) throw new Error('classification empty')
    const classification = cls.finalOutput.classification
    console.log(`üìä –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: ${classification}`)

    if (classification === 'investment_registration') {
      console.log(`üí∞ –ó–∞–ø—É—Å–∫ Investment Agent...`)
      console.log(`üìö –ò—Å—Ç–æ—Ä–∏—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞: ${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      
      const startTime = Date.now()
      console.log(`‚è±Ô∏è –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞: ${new Date().toLocaleTimeString()}`)
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª, —Å–æ–∑–¥–∞–µ–º Code Interpreter —Å —Ñ–∞–π–ª–æ–º
      let agentToRun = investmentAgent
      if (uploadedFileId) {
        console.log(`üìé –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Code Interpreter: ${uploadedFileId}`)
        agentToRun = new Agent({
          ...investmentAgent,
          tools: [codeInterpreterTool({ container: { type: 'auto', file_ids: [uploadedFileId] } })]
        })
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º (120 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤)
      // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é - –Ω–µ –º–æ–∂–µ–º –æ–±—Ä–µ–∑–∞—Ç—å –∏–∑-–∑–∞ reasoning items –≤ gpt-5
      const timeoutPromise = new Promise((_, reject) => 
        setTimeout(() => reject(new Error('Agent timeout (120s)')), 120000)
      )
      
      let inv
      try {
        inv = await Promise.race([
          runner.run(agentToRun, [...history]),
          timeoutPromise
        ])
      } catch (error) {
        if (error.message.includes('timeout')) {
          console.error('‚è∞ –ê–≥–µ–Ω—Ç –ø—Ä–µ–≤—ã—Å–∏–ª —Ç–∞–π–º–∞—É—Ç 120 —Å–µ–∫—É–Ω–¥')
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ok: true —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
          return res.json({
            ok: true,
            message: '–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ: –Ω–∞–ø–∏—à–∏—Ç–µ "–¥–∞" –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.',
            sessionId: session
          })
        }
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∫–≤–æ—Ç—ã OpenAI
        if (error.status === 429 || error.code === 'insufficient_quota') {
          console.error('üí≥ OpenAI –∫–≤–æ—Ç–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∞')
          return res.json({
            ok: false,
            message: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            sessionId: session
          })
        }
        throw error
      }
      
      const duration = ((Date.now() - startTime) / 1000).toFixed(2)
      console.log(`‚è±Ô∏è –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${duration}s`)
      console.log(`ü§ñ –ê–≥–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª: ${inv.newItems.length} –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞
      let agentMessage = '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö'
      
      // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞
      for (let i = inv.newItems.length - 1; i >= 0; i--) {
        const item = inv.newItems[i]
        if (item.rawItem?.role === 'assistant' && item.rawItem?.content?.[0]?.text) {
          agentMessage = item.rawItem.content[0].text
          break
        }
      }
      
      console.log(`üí¨ –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞: "${agentMessage}"`)
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
      history.push(...inv.newItems.map(item => item.rawItem))
      console.log(`üíæ –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∑–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
      const isFinalMessage = agentMessage.includes('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ') || 
                            agentMessage.includes('–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã iKapitalist')
      
      if (isFinalMessage) {
        console.log(`‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç...`)
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É)
        setImmediate(async () => {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º allFiles –≤ –Ω–∞—á–∞–ª–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ catch –±–ª–æ–∫–µ
          let allFiles = []
          
          try {
            allFiles = sessionFiles.get(session) || []
            if (allFiles.length === 0) {
              console.log(`‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞`)
              return
            }
            
            console.log(`üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å ${allFiles.length} —Ñ–∞–π–ª–∞–º–∏...`)
            console.log(`üìé –§–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:`, allFiles)
            
            // –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º
            const analystWithFiles = new Agent({
              ...financialAnalystAgent,
              tools: [codeInterpreterTool({ 
                container: { 
                  type: 'auto', 
                  file_ids: allFiles 
                } 
              })]
            })
            console.log(`‚úÖ Financial Analyst Agent —Å–æ–∑–¥–∞–Ω —Å —Ñ–∞–π–ª–∞–º–∏`)
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
            let amount = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
            let termMonths = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let purpose = '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
            let bin = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let name = '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
            let email = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            let phone = '–Ω–µ —É–∫–∞–∑–∞–Ω'
            
            // –ü–∞—Ä—Å–∏–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            const historyText = history.map(msg => {
              if (typeof msg.content === 'string') return msg.content
              if (Array.isArray(msg.content)) return msg.content.map(c => c.text || '').join(' ')
              return ''
            }).join(' ')
            
            // –ü—Ä–æ—Å—Ç–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
            const amountMatch = historyText.match(/(\d+)\s*–º–∏–ª/i)
            if (amountMatch) amount = `${amountMatch[1]} –º–ª–Ω KZT`
            
            const termMatch = historyText.match(/(\d+)\s*–º–µ—Å—è—Ü/i) || historyText.match(/—Å—Ä–æ–∫[:\s]*(\d+)/i)
            if (termMatch) termMonths = `${termMatch[1]} –º–µ—Å—è—Ü–µ–≤`
            
            const binMatch = historyText.match(/\b(\d{12})\b/)
            if (binMatch) bin = binMatch[1]
            
            // –ò—â–µ–º —Ü–µ–ª—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
            const purposeKeywords = ['–Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å', '—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ', '–æ–±–æ—Ä–æ—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏']
            for (const keyword of purposeKeywords) {
              if (historyText.toLowerCase().includes(keyword)) {
                purpose = keyword
                break
              }
            }
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ –ü–û–°–õ–ï–î–ù–ï–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const lastUserMessage = [...history].reverse().find(msg => msg.role === 'user')
            if (lastUserMessage) {
              const contactText = typeof lastUserMessage.content === 'string' 
                ? lastUserMessage.content 
                : (Array.isArray(lastUserMessage.content) 
                  ? lastUserMessage.content.map(c => c.text || '').join(' ') 
                  : '')
              
              const emailMatch = contactText.match(/([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/i)
              if (emailMatch) email = emailMatch[1]
              
              const phoneMatch = contactText.match(/(\+?\d[\d\s-]{9,})/g)
              if (phoneMatch) phone = phoneMatch[phoneMatch.length - 1]
              
              const nameMatch = contactText.match(/([–ê-–Ø–∞-—è–Å—ë]+\s+[–ê-–Ø–∞-—è–Å—ë]+)/i)
              if (nameMatch) name = nameMatch[1]
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "generating"
            const insertReport = db.prepare(`
              INSERT OR REPLACE INTO reports (session_id, company_bin, amount, term, purpose, name, email, phone, files_count, status)
              VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'generating')
            `)
            insertReport.run(session, bin, amount, termMonths, purpose, name, email, phone, allFiles.length)
            console.log(`üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î: ${session}`)
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            const reportRequest = `–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –≤—ã–ø–∏—Å–æ–∫.

–î–ê–ù–ù–´–ï –ó–ê–Ø–í–ö–ò:
- –ö–æ–º–ø–∞–Ω–∏—è (–ë–ò–ù): ${bin}
- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞: ${amount}
- –°—Ä–æ–∫: ${termMonths}
- –¶–µ–ª—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è: ${purpose}
- –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${name}, ${email}, ${phone}

–ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å–µ ${allFiles.length} –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤—ã–ø–∏—Å–∫–∏ (—Ñ–∞–π–ª—ã —É–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã) –∏ —Å–æ–∑–¥–∞–π –ø–æ–ª–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏–∑ —Ç–≤–æ–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.`
            
            console.log(`üìù –ó–∞–ø—Ä–æ—Å –∫ –∞–≥–µ–Ω—Ç—É:`)
            console.log(reportRequest)
            console.log(`\n‚è±Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º Financial Analyst Agent...`)
            
            const reportRunner = new Runner({})
            const startAnalysis = Date.now()
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ 900 —Å–µ–∫—É–Ω–¥ (15 –º–∏–Ω—É—Ç) –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
            const analysisTimeout = new Promise((_, reject) =>
              setTimeout(() => reject(new Error('Financial Analyst timeout (900s)')), 900000)
            )
            
            // –§—É–Ω–∫—Ü–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π –ø—Ä–∏ rate limit
            const runWithRetry = async (maxRetries = 3, retryDelay = 2000) => {
              for (let attempt = 1; attempt <= maxRetries; attempt++) {
                try {
                  return await Promise.race([
                    reportRunner.run(analystWithFiles, [
                      { role: 'user', content: reportRequest }
                    ]),
                    analysisTimeout
                  ])
                } catch (error) {
                  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ rate limit –æ—à–∏–±–∫–∞
                  if (error.message && error.message.includes('Rate limit') && attempt < maxRetries) {
                    console.log(`‚ö†Ô∏è Rate limit –¥–æ—Å—Ç–∏–≥–Ω—É—Ç. –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}. –ñ–¥–µ–º ${retryDelay}ms...`)
                    await new Promise(resolve => setTimeout(resolve, retryDelay))
                    retryDelay *= 2 // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ
                    continue
                  }
                  throw error
                }
              }
            }
            
            const reportResult = await runWithRetry()
            
            const analysisTime = ((Date.now() - startAnalysis) / 1000).toFixed(2)
            console.log(`‚è±Ô∏è –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${analysisTime}s`)
            console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${reportResult.newItems.length}`)
            
            // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.log(`üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:`)
            console.log(JSON.stringify(reportResult.newItems.map((item, i) => ({
              index: i,
              role: item.rawItem?.role,
              contentType: item.rawItem?.content?.[0]?.type,
              hasText: !!item.rawItem?.content?.[0]?.text,
              textLength: item.rawItem?.content?.[0]?.text?.length || 0
            })), null, 2))
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç—á–µ—Ç - –ø—Ä–æ–±—É–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            let report = '–û—Ç—á–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω'
            
            // –í–∞—Ä–∏–∞–Ω—Ç 1: –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π assistant message —Å —Ç–µ–∫—Å—Ç–æ–º
            for (let i = reportResult.newItems.length - 1; i >= 0; i--) {
              const item = reportResult.newItems[i]
              if (item.rawItem?.role === 'assistant') {
                console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç ${i}:`, {
                  role: item.rawItem.role,
                  contentLength: item.rawItem.content?.length,
                  firstContentType: item.rawItem.content?.[0]?.type,
                  hasText: !!item.rawItem.content?.[0]?.text
                })
                
                if (item.rawItem.content?.[0]?.text) {
                  report = item.rawItem.content[0].text
                  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}, –¥–ª–∏–Ω–∞: ${report.length} —Å–∏–º–≤–æ–ª–æ–≤`)
                  break
                }
              }
            }
            
            // –í–∞—Ä–∏–∞–Ω—Ç 2: –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ content.value
            if (report === '–û—Ç—á–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω') {
              console.log(`‚ö†Ô∏è –í–∞—Ä–∏–∞–Ω—Ç 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏...`)
              for (let i = reportResult.newItems.length - 1; i >= 0; i--) {
                const item = reportResult.newItems[i]
                if (item.rawItem?.role === 'assistant' && item.rawItem.content) {
                  for (const content of item.rawItem.content) {
                    if (content.type === 'text' && content.text?.value) {
                      report = content.text.value
                      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç —á–µ—Ä–µ–∑ text.value –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}`)
                      break
                    }
                  }
                  if (report !== '–û—Ç—á–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω') break
                }
              }
            }
            
            // –í–∞—Ä–∏–∞–Ω—Ç 3: –µ—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ assistant message
            if (report === '–û—Ç—á–µ—Ç –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω' && reportResult.newItems.length > 0) {
              console.log(`‚ö†Ô∏è –í–∞—Ä–∏–∞–Ω—Ç 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª. –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ assistant message:`)
              const assistantItem = reportResult.newItems.find(item => item.rawItem?.role === 'assistant')
              if (assistantItem) {
                console.log(JSON.stringify(assistantItem.rawItem, null, 2))
              }
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ –ë–î
            const updateReport = db.prepare(`
              UPDATE reports 
              SET report_text = ?, status = 'completed', completed_at = CURRENT_TIMESTAMP
              WHERE session_id = ?
            `)
            updateReport.run(report, session)
            
            console.log(`‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î –¥–ª—è —Å–µ—Å—Å–∏–∏ ${session}`)
            console.log(`üìä ========== –û–¢–ß–ï–¢ –î–õ–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê ==========`)
            console.log(report.substring(0, 500) + '...')
            console.log(`üìä ==========================================\n`)
            
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:`, error.message)
            console.error(`‚ùå –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:`, error.stack)
            
            // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç ‚Äî –ù–ï –ø–æ–º–µ—á–∞–µ–º –æ—Ç—á–µ—Ç –∫–∞–∫ error, –æ—Å—Ç–∞–≤–ª—è–µ–º status=generating.
            // –ê–≥–µ–Ω—Ç –º–æ–≥ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ OpenAI, –∏ –æ—Ç—á–µ—Ç –ø—Ä–∏–¥–µ—Ç –ø–æ–∑–∂–µ.
            if (String(error.message || '').includes('timeout')) {
              console.warn('‚è≥ Financial Analyst –Ω–µ —É—Å–ø–µ–ª –∑–∞ —Ç–∞–π–º–∞—É—Ç. –°—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–≤–ª–µ–Ω generating, –æ—Ç—á–µ—Ç –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –ø–æ–∑–∂–µ.')
            } else {
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É –≤ –ë–î
              const updateError = db.prepare(`
                UPDATE reports 
                SET report_text = ?, status = 'error', completed_at = CURRENT_TIMESTAMP
                WHERE session_id = ?
              `)
              updateError.run(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: ${error.message}`, session)
            }
          }
        })
      }
      
      return res.json({ 
        ok: true, 
        message: agentMessage,
        sessionId: session,
        completed: isFinalMessage  // –§–ª–∞–≥ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
      })
    }

    if (classification === 'get_information') {
      console.log(`‚ÑπÔ∏è –ó–∞–ø—É—Å–∫ Information Agent...`)
      const info = await runner.run(informationAgent, [...history])
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
      history.push(...info.newItems.map(item => item.rawItem))
      
      let infoMessage = '–ì–æ—Ç–æ–≤–æ'
      for (let i = info.newItems.length - 1; i >= 0; i--) {
        const item = info.newItems[i]
        if (item.rawItem?.role === 'assistant' && item.rawItem?.content?.[0]?.text) {
          infoMessage = item.rawItem.content[0].text
          break
        }
      }
      
      console.log(`üí¨ –û—Ç–≤–µ—Ç Information Agent: "${infoMessage}"`)
      return res.json({ ok: true, message: infoMessage, sessionId: session })
    }

    // –î–ª—è –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–π - –µ—Å–ª–∏ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —ç—Ç–æ —á–∞—Å—Ç—å –¥–∏–∞–ª–æ–≥–∞
    if (history.length > 1) {
      console.log(`‚ùì –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è "${classification}", –Ω–æ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Investment Agent`)
      
      const startTime = Date.now()
      console.log(`‚è±Ô∏è –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞: ${new Date().toLocaleTimeString()}`)
      
      const inv = await runner.run(investmentAgent, [...history])
      
      const duration = ((Date.now() - startTime) / 1000).toFixed(2)
      console.log(`‚è±Ô∏è –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${duration}s`)
      console.log(`ü§ñ –ê–≥–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª: ${inv.newItems.length} –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
      
      let agentMessage = '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö'
      for (let i = inv.newItems.length - 1; i >= 0; i--) {
        const item = inv.newItems[i]
        if (item.rawItem?.role === 'assistant' && item.rawItem?.content?.[0]?.text) {
          agentMessage = item.rawItem.content[0].text
          break
        }
      }
      
      console.log(`üí¨ –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞: "${agentMessage}"`)
      
      if (agentMessage.includes('=== –§–ò–ù–ê–ù–°–û–í–´–ô –ê–ù–ê–õ–ò–ó ===') || 
          agentMessage.includes('=== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –ó–ê–Ø–í–ö–ï ===')) {
        console.log(`\nüìä ========== –û–¢–ß–ï–¢ –î–õ–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê ==========`)
        console.log(agentMessage)
        console.log(`üìä ==========================================\n`)
      }
      
      history.push(...inv.newItems.map(item => item.rawItem))
      console.log(`üíæ –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${history.length} —Å–æ–æ–±—â–µ–Ω–∏–π`)
      
      return res.json({ ok: true, message: agentMessage, sessionId: session })
    }

    console.log(`‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: ${classification}`)
    return res.json({ ok: true, message: '–ù–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å', sessionId: session })
  } catch (e) {
    console.error('agents error', e)
    return res.status(500).json({ ok: false, error: String(e) })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ session_id
app.get('/api/reports/:sessionId', (req, res) => {
  const { sessionId } = req.params
  
  console.log(`üìä –ó–∞–ø—Ä–æ—Å –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏: ${sessionId}`)
  
  try {
    const report = db.prepare('SELECT * FROM reports WHERE session_id = ?').get(sessionId)
    
    if (!report) {
      console.log(`‚ö†Ô∏è –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–µ—Å—Å–∏–∏ ${sessionId}`)
      return res.json({
        ok: false,
        message: '–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      })
    }
    
    console.log(`‚úÖ –û—Ç—á–µ—Ç –Ω–∞–π–¥–µ–Ω, —Å—Ç–∞—Ç—É—Å: ${report.status}`)
    return res.json({
      ok: true,
      report: {
        sessionId: report.session_id,
        bin: report.company_bin,
        amount: report.amount,
        term: report.term,
        purpose: report.purpose,
        name: report.name,
        email: report.email,
        phone: report.phone,
        filesCount: report.files_count,
        status: report.status,
        reportText: report.report_text,
        createdAt: report.created_at,
        completedAt: report.completed_at
      }
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ (–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
app.get('/api/reports', (req, res) => {
  try {
    const reports = db.prepare(`
      SELECT session_id, company_bin, amount, term, purpose, name, email, phone, 
             status, files_count, created_at, completed_at
      FROM reports 
      ORDER BY created_at DESC
    `).all()
    
    console.log(`üìã –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫: ${reports.length} —à—Ç.`)
    return res.json({
      ok: true,
      reports: reports.map(r => ({
        sessionId: r.session_id,
        bin: r.company_bin,
        amount: r.amount,
        term: r.term,
        purpose: r.purpose,
        name: r.name,
        email: r.email,
        phone: r.phone,
        filesCount: r.files_count,
        status: r.status,
        createdAt: r.created_at,
        completedAt: r.completed_at
      }))
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫:', error)
    return res.status(500).json({
      ok: false,
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    })
  }
})

const PORT = process.env.PORT || 8787
app.listen(PORT, () => {
  console.log(`[server] agents listening on ${PORT}`)
  console.log(`[server] API key present: ${!!process.env.OPENAI_API_KEY}`)
})

// Keep server alive
process.on('SIGTERM', () => {
  console.log('[server] SIGTERM received, shutting down gracefully')
  process.exit(0)
})

process.on('SIGINT', () => {
  console.log('[server] SIGINT received, shutting down gracefully')
  process.exit(0)
})


