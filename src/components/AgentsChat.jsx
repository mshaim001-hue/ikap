import React, { useState, useRef, useEffect } from 'react'
import { Send, Bot, User, Loader, Paperclip } from 'lucide-react'
import PrivacyPolicyModal from './PrivacyPolicyModal'
import './AgentsChat.css'

const AgentsChat = () => {
  const [messages, setMessages] = useState([
    {
      id: 1,
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
      sender: 'bot',
      timestamp: new Date()
    }
  ])
  const [inputMessage, setInputMessage] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [sessionId, setSessionId] = useState(null)
  const [selectedFile, setSelectedFile] = useState(null)
  const [showPrivacyModal, setShowPrivacyModal] = useState(false)
  const [dialogState, setDialogState] = useState('greeting') // greeting, name_collected, terms_accepted, data_collection
  const [userName, setUserName] = useState('')
  const [isCompleted, setIsCompleted] = useState(false) // –§–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
  const [showReportModal, setShowReportModal] = useState(false) // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç—á–µ—Ç–∞
  const [reportData, setReportData] = useState(null) // –î–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
  const [loadingReport, setLoadingReport] = useState(false) // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞
  const fileInputRef = useRef(null)
  const messagesEndRef = useRef(null)

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  const handleFileSelect = (event) => {
    const file = event.target.files[0]
    if (file) {
      setSelectedFile(file)
      setInputMessage(`–ü—Ä–∏–∫—Ä–µ–ø–ª—è—é —Ñ–∞–π–ª: ${file.name}`)
    }
  }

  const handleSendMessage = async () => {
    if ((!inputMessage.trim() && !selectedFile) || isLoading) return

    console.log('üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:', dialogState)
    console.log('üìù –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', inputMessage.trim())

    const userMessage = {
      id: Date.now(),
      text: inputMessage + (selectedFile ? ` (—Ñ–∞–π–ª: ${selectedFile.name})` : ''),
      sender: 'user',
      timestamp: new Date()
    }

    setMessages(prev => [...prev, userMessage])
    
    const messageText = inputMessage.trim()
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞
    if (dialogState === 'greeting') {
      setUserName(messageText)
      setDialogState('name_collected')
      
      const botMessage = {
        id: Date.now() + 1,
        text: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${messageText}. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –¥–µ–Ω–µ–≥ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.`,
        sender: 'bot',
        timestamp: new Date(),
        showTermsButton: true
      }
      
      setMessages(prev => [...prev, botMessage])
      setInputMessage('')
      setSelectedFile(null)
      return
    }
    
    if (dialogState === 'name_collected') {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –∑–¥–µ—Å—å - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ
      return
    }
    
    if (dialogState === 'terms_accepted') {
      console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö')
      setDialogState('data_collection')
      
      // –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞:', messageText)
      console.log('üÜî SessionId:', sessionId)
      console.log('üìé –§–∞–π–ª:', selectedFile?.name)
      
      setInputMessage('')
      setSelectedFile(null)
      setIsLoading(true)

      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
        const formData = new FormData()
        formData.append('text', messageText)
        if (sessionId) formData.append('sessionId', sessionId)
        if (selectedFile) formData.append('file', selectedFile)

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É...')
        
        // call backend server
        const resp = await fetch('/api/agents/run', {
          method: 'POST',
          body: formData
        })
        
        console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resp.status)
        const result = await resp.json()
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º sessionId –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (result.sessionId && !sessionId) {
          setSessionId(result.sessionId)
          console.log('üÜî –ù–æ–≤—ã–π sessionId:', result.sessionId)
        }
        
        const botMessage = {
          id: Date.now() + 1,
          text: result.message,
          sender: 'bot',
          timestamp: new Date(),
          data: result.data
        }

        console.log('üí¨ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞:', result.message)
        setMessages(prev => [...prev, botMessage])
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
        const errorMessage = {
          id: Date.now() + 1,
          text: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
          sender: 'bot',
          timestamp: new Date()
        }
        setMessages(prev => [...prev, errorMessage])
      } finally {
        setIsLoading(false)
      }
      return
    }
    
    // –ï—Å–ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞
    if (dialogState === 'data_collection') {
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞:', messageText)
      console.log('üÜî SessionId:', sessionId)
      console.log('üìé –§–∞–π–ª:', selectedFile?.name)
      
      setInputMessage('')
      setSelectedFile(null)
      setIsLoading(true)

      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
        const formData = new FormData()
        formData.append('text', messageText)
        if (sessionId) formData.append('sessionId', sessionId)
        if (selectedFile) formData.append('file', selectedFile)

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É...')
        
        // call backend server
        const resp = await fetch('/api/agents/run', {
          method: 'POST',
          body: formData
        })
        
        console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resp.status)
        const result = await resp.json()
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º sessionId –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (result.sessionId && !sessionId) {
          setSessionId(result.sessionId)
          console.log('üÜî –ù–æ–≤—ã–π sessionId:', result.sessionId)
        }
        
        const botMessage = {
          id: Date.now() + 1,
          text: result.message,
          sender: 'bot',
          timestamp: new Date(),
          data: result.data
        }

        console.log('üí¨ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞:', result.message)
        setMessages(prev => [...prev, botMessage])
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∑–∞—è–≤–∫–∞
        if (result.completed) {
          console.log('‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
          setIsCompleted(true)
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
        const errorMessage = {
          id: Date.now() + 1,
          text: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
          sender: 'bot',
          timestamp: new Date()
        }
        setMessages(prev => [...prev, errorMessage])
      } finally {
        setIsLoading(false)
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ
      console.log('üßπ –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ (–Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö)')
      setInputMessage('')
      setSelectedFile(null)
    }
  }

  const handleShowTerms = () => {
    setShowPrivacyModal(true)
  }

  const handleAcceptTerms = () => {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —É—Å–ª–æ–≤–∏—è')
    setShowPrivacyModal(false)
    setDialogState('terms_accepted')
    
    const botMessage = {
      id: Date.now(),
      text: "–ö–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?",
      sender: 'bot',
      timestamp: new Date()
    }
    
    setMessages(prev => [...prev, botMessage])
    console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: terms_accepted')
  }

  const handleDeclineTerms = () => {
    setShowPrivacyModal(false)
    
    const botMessage = {
      id: Date.now(),
      text: "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ email info@ikapitalist.kz",
      sender: 'bot',
      timestamp: new Date()
    }
    
    setMessages(prev => [...prev, botMessage])
  }

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSendMessage()
    }
  }

  const handleShowReport = async () => {
    if (!sessionId) {
      alert('–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
      return
    }
    
    setLoadingReport(true)
    setShowReportModal(true)
    
    try {
      const resp = await fetch(`/api/agents/report/${sessionId}`)
      const result = await resp.json()
      
      if (result.ok) {
        setReportData(result)
      } else {
        setReportData({ error: result.message })
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => handleShowReport(), 3000)
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞:', error)
      setReportData({ error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞' })
    } finally {
      setLoadingReport(false)
    }
  }

  return (
    <div className="agents-chat-container">
      <PrivacyPolicyModal 
        isOpen={showPrivacyModal}
        onClose={handleDeclineTerms}
        onAccept={handleAcceptTerms}
      />
      
      <div className="agents-chat-header">
        <div className="agents-chat-title">
          <Bot size={24} />
          <span>AI –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º (Agents SDK)</span>
        </div>
      </div>

      <div className="agents-chat-messages">
        {messages.map((message) => (
          <div key={message.id} className={`message ${message.sender}`}>
            <div className="message-avatar">
              {message.sender === 'bot' ? <Bot size={20} /> : <User size={20} />}
            </div>
            <div className="message-content">
              <div className="message-text">{message.text}</div>
              {message.showTermsButton && (
                <div className="message-actions">
                  <button 
                    onClick={handleShowTerms}
                    className="terms-button"
                  >
                    –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                  </button>
                </div>
              )}
              {message.data && (
                <div className="message-data">
                  <pre>{JSON.stringify(message.data, null, 2)}</pre>
                </div>
              )}
              <div className="message-time">
                {message.timestamp.toLocaleTimeString('ru-RU', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}
              </div>
            </div>
          </div>
        ))}
        
        {isLoading && (
          <div className="message bot">
            <div className="message-avatar">
              <Bot size={20} />
            </div>
            <div className="message-content">
              <div className="message-text">
                <Loader size={16} className="animate-spin" />
                –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...
              </div>
            </div>
          </div>
        )}
        
        <div ref={messagesEndRef} />
      </div>

      <div className="agents-chat-input">
        {isCompleted ? (
          <div className="completion-message">
            <div className="completion-text">
              –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!
            </div>
            <button 
              onClick={handleShowReport}
              className="report-button"
            >
              üìä –û—Ç—á–µ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            </button>
          </div>
        ) : (
          <div className="input-container">
            {selectedFile && (
              <div className="selected-file">
                <span>üìé {selectedFile.name}</span>
                <button 
                  onClick={() => setSelectedFile(null)}
                  className="remove-file"
                >
                  √ó
                </button>
              </div>
            )}
            <textarea
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
              className="message-input"
              rows="1"
            />
            <button
              onClick={() => fileInputRef.current?.click()}
              className="attach-button"
              title="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª"
            >
              <Paperclip size={20} />
            </button>
            <button
              onClick={handleSendMessage}
              disabled={(!inputMessage.trim() && !selectedFile) || isLoading}
              className="send-button"
            >
              <Send size={20} />
            </button>
          </div>
        )}
        <input
          ref={fileInputRef}
          type="file"
          onChange={handleFileSelect}
          accept=".pdf,.xlsx,.xls,.csv,.doc,.docx"
          style={{ display: 'none' }}
        />
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –æ—Ç—á–µ—Ç–æ–º */}
      {showReportModal && (
        <div className="report-modal-overlay" onClick={() => setShowReportModal(false)}>
          <div className="report-modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="report-modal-header">
              <h2>üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h2>
              <button 
                onClick={() => setShowReportModal(false)}
                className="report-modal-close"
              >
                √ó
              </button>
            </div>
            <div className="report-modal-body">
              {loadingReport ? (
                <div className="report-loading">
                  <Loader size={32} className="animate-spin" />
                  <p>–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞...</p>
                </div>
              ) : reportData?.error ? (
                <div className="report-error">
                  <p>{reportData.error}</p>
                  <p style={{ fontSize: '14px', color: '#666' }}>
                    –û—Ç—á–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏. 
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...
                  </p>
                </div>
              ) : reportData?.report ? (
                <div className="report-text">
                  <pre style={{ whiteSpace: 'pre-wrap', fontFamily: 'inherit' }}>
                    {reportData.report}
                  </pre>
                  <div className="report-meta">
                    <small>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {new Date(reportData.generated).toLocaleString('ru-RU')}</small>
                    <small>–§–∞–π–ª–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {reportData.filesCount}</small>
                  </div>
                </div>
              ) : null}
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default AgentsChat
