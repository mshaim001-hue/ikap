import React, { useState, useRef, useEffect } from 'react'
import { Send, User, Paperclip } from 'lucide-react'
import PrivacyPolicyModal from './PrivacyPolicyModal'
import { getApiUrl } from '../utils/api'
import './AgentsChat.css'

// –ò–∫–æ–Ω–∫–∞ —Å –±—É–∫–≤–∞–º–∏ "iK" –¥–ª—è iKapitalist
const AIIcon = ({ size = 24 }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none">
    <circle cx="12" cy="12" r="10" fill="url(#ikGradient)" />
    <text 
      x="12" 
      y="16" 
      fontFamily="system-ui, -apple-system, sans-serif" 
      fontSize="11" 
      fontWeight="700" 
      fill="white" 
      textAnchor="middle"
    >
      iK
    </text>
    <defs>
      <linearGradient id="ikGradient" x1="2" y1="2" x2="22" y2="22">
        <stop stopColor="#667eea" />
        <stop offset="1" stopColor="#764ba2" />
      </linearGradient>
    </defs>
  </svg>
)

const AgentsChat = () => {
  const [messages, setMessages] = useState([
    {
      id: 1,
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
      sender: 'bot',
      timestamp: new Date()
    }
  ])
  const [inputMessage, setInputMessage] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [sessionId, setSessionId] = useState(null)
  const [selectedFile, setSelectedFile] = useState(null)
  const [showPrivacyModal, setShowPrivacyModal] = useState(false)
  const [dialogState, setDialogState] = useState('greeting') // greeting, name_collected, terms_accepted, data_collection
  const [userName, setUserName] = useState('')
  const [isCompleted, setIsCompleted] = useState(false) // –§–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
  const [isRestoringSession, setIsRestoringSession] = useState(false)
  const fileInputRef = useRef(null)
  const messagesEndRef = useRef(null)

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
  useEffect(() => {
    if (sessionId) {
      localStorage.setItem('ikap_sessionId', sessionId)
    }
    if (dialogState) {
      localStorage.setItem('ikap_dialogState', dialogState)
    }
    if (userName) {
      localStorage.setItem('ikap_userName', userName)
    }
    if (isCompleted) {
      localStorage.setItem('ikap_isCompleted', 'true')
    }
  }, [sessionId, dialogState, userName, isCompleted])
  
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const restoreSession = async () => {
      const savedSessionId = localStorage.getItem('ikap_sessionId')
      const savedDialogState = localStorage.getItem('ikap_dialogState')
      const savedUserName = localStorage.getItem('ikap_userName')
      const savedIsCompleted = localStorage.getItem('ikap_isCompleted')
      
      console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', {
        sessionId: savedSessionId,
        dialogState: savedDialogState,
        userName: savedUserName
      })
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ (–¥–∞–∂–µ –±–µ–∑ sessionId)
      if (savedDialogState && savedDialogState !== 'greeting') {
        console.log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:', savedDialogState)
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (savedUserName) {
          setUserName(savedUserName)
          console.log('üë§ –ò–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', savedUserName)
        }
        
        if (savedIsCompleted === 'true') {
          setIsCompleted(true)
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å sessionId, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞
        if (savedSessionId) {
          setIsRestoringSession(true)
          
          try {
            console.log('üì° –ó–∞–ø—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–∏:', savedSessionId)
            const response = await fetch(getApiUrl(`/api/sessions/${savedSessionId}/history`))
            
            if (response.ok) {
              const data = await response.json()
              console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞:', data)
              
              if (data.messages && data.messages.length > 0) {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Å–µ—Å—Å–∏—é
                setSessionId(savedSessionId)
                setMessages(data.messages)
                setDialogState(savedDialogState)
                
                console.log('‚úÖ –ü–æ–ª–Ω–∞—è —Å–µ—Å—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!')
              } else {
                // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                console.log('‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—É—Å—Ç–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ')
                setDialogState(savedDialogState)
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
                if (savedDialogState === 'name_collected' && savedUserName) {
                  setMessages([
                    {
                      id: 1,
                      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
                      sender: 'bot',
                      timestamp: new Date()
                    },
                    {
                      id: 2,
                      text: savedUserName,
                      sender: 'user',
                      timestamp: new Date()
                    },
                    {
                      id: 3,
                      text: `–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ${savedUserName}! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π iKapitalist –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.`,
                      sender: 'bot',
                      timestamp: new Date(),
                      showTermsButton: true
                    }
                  ])
                } else if (savedDialogState === 'terms_accepted') {
                  setMessages([
                    {
                      id: 1,
                      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
                      sender: 'bot',
                      timestamp: new Date()
                    },
                    {
                      id: 2,
                      text: savedUserName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                      sender: 'user',
                      timestamp: new Date()
                    },
                    {
                      id: 3,
                      text: `–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ${savedUserName}! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π iKapitalist –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.`,
                      sender: 'bot',
                      timestamp: new Date()
                    },
                    {
                      id: 4,
                      text: '–£—Å–ª–æ–≤–∏—è –ø—Ä–∏–Ω—è—Ç—ã',
                      sender: 'user',
                      timestamp: new Date()
                    },
                    {
                      id: 5,
                      text: '–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π. –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?',
                      sender: 'bot',
                      timestamp: new Date()
                    }
                  ])
                }
              }
            } else {
              // –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              console.log('‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ')
              setDialogState(savedDialogState)
            }
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error)
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            setDialogState(savedDialogState)
          }
          
          setIsRestoringSession(false)
        } else {
          // –ï—Å–ª–∏ –Ω–µ—Ç sessionId, –ø—Ä–æ—Å—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
          setDialogState(savedDialogState)
          console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–±–µ–∑ sessionId)')
        }
      }
    }
    
    restoreSession()
  }, [])

  const handleFileSelect = (event) => {
    const file = event.target.files[0]
    if (file) {
      setSelectedFile(file)
      setInputMessage(`–ü—Ä–∏–∫—Ä–µ–ø–ª—è—é —Ñ–∞–π–ª: ${file.name}`)
    }
  }

  const handleSendMessage = async () => {
    if ((!inputMessage.trim() && !selectedFile) || isLoading) return

    console.log('üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:', dialogState)
    console.log('üìù –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', inputMessage.trim())

    const userMessage = {
      id: Date.now(),
      text: inputMessage + (selectedFile ? ` (—Ñ–∞–π–ª: ${selectedFile.name})` : ''),
      sender: 'user',
      timestamp: new Date()
    }

    setMessages(prev => [...prev, userMessage])
    
    const messageText = inputMessage.trim()
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞
    if (dialogState === 'greeting') {
      setUserName(messageText)
      setDialogState('name_collected')
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–µ—Ä –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã
      setInputMessage('')
      setSelectedFile(null)
      setIsLoading(true)
      
      setTimeout(() => {
        const botMessage = {
          id: Date.now() + 1,
          text: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${messageText}. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –¥–µ–Ω–µ–≥ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. 
–ü–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç 10 –º–ª–Ω –¥–æ 1 –º–ª—Ä–¥ —Ç–µ–Ω–≥–µ –ø–æ–¥ 2,5% –≥–æ–¥–æ–≤—ã—Ö —á–µ—Ä–µ–∑ –Ω–∞—à—É –∫—Ä–∞—É–¥—Ñ–∞–Ω–¥–∏–Ω–≥–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É.
–°—Ä–æ–∫ –∑–∞–π–º–∞ ‚Äî –æ—Ç 4 –¥–æ 36 –º–µ—Å—è—Ü–µ–≤.
–ë—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç.
–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –≤—ã–ø–∏—Å–∫–∏ —Å –±–∞–Ω–∫–∞ —é—Ä –ª–∏—Ü–∞ –∑–∞ —ç—Ç–æ—Ç –≥–æ–¥ –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π`,
          sender: 'bot',
          timestamp: new Date(),
          showTermsButton: true
        }
        
        setMessages(prev => [...prev, botMessage])
        setIsLoading(false)
      }, 3000)
      
      return
    }
    
    if (dialogState === 'name_collected') {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –∑–¥–µ—Å—å - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ
      return
    }
    
    if (dialogState === 'terms_accepted') {
      console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö')
      setDialogState('data_collection')
      
      // –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞:', messageText)
      console.log('üÜî SessionId:', sessionId)
      console.log('üìé –§–∞–π–ª:', selectedFile?.name)
      
      setInputMessage('')
      setSelectedFile(null)
      setIsLoading(true)

      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
        const formData = new FormData()
        formData.append('text', messageText)
        if (sessionId) formData.append('sessionId', sessionId)
        if (selectedFile) formData.append('file', selectedFile)

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É...')
        
        // call backend server
        const resp = await fetch(getApiUrl('/api/agents/run'), {
          method: 'POST',
          body: formData
        })
        
        console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resp.status)
        const result = await resp.json()
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º sessionId –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (result.sessionId && !sessionId) {
          setSessionId(result.sessionId)
          localStorage.setItem('ikap_sessionId', result.sessionId)
          console.log('üÜî –ù–æ–≤—ã–π sessionId:', result.sessionId)
        }
        
        const botMessage = {
          id: Date.now() + 1,
          text: result.message,
          sender: 'bot',
          timestamp: new Date(),
          data: result.data
        }

        console.log('üí¨ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞:', result.message)
        setMessages(prev => [...prev, botMessage])
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
        const errorMessage = {
          id: Date.now() + 1,
          text: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
          sender: 'bot',
          timestamp: new Date()
        }
        setMessages(prev => [...prev, errorMessage])
      } finally {
        setIsLoading(false)
      }
      return
    }
    
    // –ï—Å–ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞
    if (dialogState === 'data_collection') {
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–≥–µ–Ω—Ç–∞:', messageText)
      console.log('üÜî SessionId:', sessionId)
      console.log('üìé –§–∞–π–ª:', selectedFile?.name)
      
      setIsLoading(true)

      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
        const formData = new FormData()
        formData.append('text', messageText)
        if (sessionId) formData.append('sessionId', sessionId)
        if (selectedFile) formData.append('file', selectedFile)

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É...')
        
        // call backend server
        const resp = await fetch(getApiUrl('/api/agents/run'), {
          method: 'POST',
          body: formData
        })
        
        console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', resp.status)
        const result = await resp.json()
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result)
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º sessionId –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (result.sessionId && !sessionId) {
          setSessionId(result.sessionId)
          localStorage.setItem('ikap_sessionId', result.sessionId)
          console.log('üÜî –ù–æ–≤—ã–π sessionId:', result.sessionId)
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω—ã–º
        if (result.ok === false) {
          console.error('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', result.message)
          const errorMessage = {
            id: Date.now() + 1,
            text: result.message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            sender: 'bot',
            timestamp: new Date()
          }
          setMessages(prev => [...prev, errorMessage])
          // –û—á–∏—â–∞–µ–º –ø–æ–ª—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–µ—É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
          setInputMessage('')
          setSelectedFile(null)
          return // –í—ã—Ö–æ–¥–∏–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
        }
        
        const botMessage = {
          id: Date.now() + 1,
          text: result.message,
          sender: 'bot',
          timestamp: new Date(),
          data: result.data
        }

        console.log('üí¨ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞:', result.message)
        setMessages(prev => [...prev, botMessage])
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        setInputMessage('')
        setSelectedFile(null)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∑–∞—è–≤–∫–∞  
        if (result.completed) {
          console.log('‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç—á–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ.')
          setIsCompleted(true)
          // –û—á–∏—â–∞–µ–º localStorage –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —ç—Ç—É —Å–µ—Å—Å–∏—é
          localStorage.removeItem('ikap_sessionId')
          localStorage.removeItem('ikap_dialogState')
          localStorage.removeItem('ikap_userName')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
        const errorMessage = {
          id: Date.now() + 1,
          text: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
          sender: 'bot',
          timestamp: new Date()
        }
        setMessages(prev => [...prev, errorMessage])
        // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
        setInputMessage('')
        setSelectedFile(null)
      } finally {
        setIsLoading(false)
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ
      console.log('üßπ –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ (–Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö)')
      setInputMessage('')
      setSelectedFile(null)
    }
  }

  const handleShowTerms = () => {
    setShowPrivacyModal(true)
  }

  const handleAcceptTerms = () => {
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —É—Å–ª–æ–≤–∏—è')
    setShowPrivacyModal(false)
    setDialogState('terms_accepted')
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã
    setIsLoading(true)
    
    setTimeout(() => {
      const botMessage = {
        id: Date.now(),
        text: "–ö–∞–∫—É—é —Å—É–º–º—É –≤ —Ç–µ–Ω–≥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?",
        sender: 'bot',
        timestamp: new Date()
      }
      
      setMessages(prev => [...prev, botMessage])
      setIsLoading(false)
      console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: terms_accepted')
    }, 3000)
  }

  const handleDeclineTerms = () => {
    setShowPrivacyModal(false)
    
    const botMessage = {
      id: Date.now(),
      text: "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ email info@ikapitalist.kz",
      sender: 'bot',
      timestamp: new Date()
    }
    
    setMessages(prev => [...prev, botMessage])
  }

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSendMessage()
    }
  }

  return (
    <div className="agents-chat-container">
      <PrivacyPolicyModal 
        isOpen={showPrivacyModal}
        onClose={handleDeclineTerms}
        onAccept={handleAcceptTerms}
      />
      
      <div className="agents-chat-header">
        <div className="agents-chat-title">
          <AIIcon size={28} />
          <span>iKapitalist AI</span>
        </div>
      </div>

      <div className="agents-chat-messages">
        {isRestoringSession ? (
          <div className="message bot">
            <div className="message-avatar">
              <AIIcon size={22} />
            </div>
            <div className="message-content">
              <div className="message-text">–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à—É —Å–µ—Å—Å–∏—é...</div>
            </div>
          </div>
        ) : null}
        {messages.map((message) => (
          <div key={message.id} className={`message ${message.sender}`}>
            <div className="message-avatar">
              {message.sender === 'bot' ? <AIIcon size={22} /> : <User size={20} />}
            </div>
            <div className="message-content">
              <div className="message-text">{message.text}</div>
              {message.showTermsButton && (
                <div className="message-actions">
                  <button 
                    onClick={handleShowTerms}
                    className="terms-button"
                  >
                    –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                  </button>
                </div>
              )}
              {message.data && (
                <div className="message-data">
                  <pre>{JSON.stringify(message.data, null, 2)}</pre>
                </div>
              )}
              <div className="message-time">
                {message.timestamp.toLocaleTimeString('ru-RU', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}
              </div>
            </div>
          </div>
        ))}
        
        {isLoading && (
          <div className="message bot">
            <div className="message-avatar">
              <AIIcon size={22} />
            </div>
            <div className="message-content">
              <div className="message-text">
                <div className="loading-dots">
                  <span></span>
                  <span></span>
                  <span></span>
                </div>
              </div>
            </div>
          </div>
        )}
        
        <div ref={messagesEndRef} />
      </div>

      <div className="agents-chat-input">
        {isCompleted ? (
          <div className="completion-message">
            <div className="completion-text">
              ‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –ú—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
            </div>
            <button 
              onClick={() => window.location.reload()}
              className="new-application-button"
              style={{
                marginTop: '15px',
                padding: '12px 24px',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                color: 'white',
                border: 'none',
                borderRadius: '12px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: '600',
                boxShadow: '0 4px 15px rgba(102, 126, 234, 0.3)',
                transition: 'all 0.3s ease'
              }}
            >
              –ü–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
            </button>
          </div>
        ) : (
          <div className="input-container">
            {selectedFile && (
              <div className="selected-file">
                <span>üìé {selectedFile.name}</span>
                <button 
                  onClick={() => setSelectedFile(null)}
                  className="remove-file"
                >
                  √ó
                </button>
              </div>
            )}
            <textarea
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
              className="message-input"
              rows="1"
            />
            <button
              onClick={() => fileInputRef.current?.click()}
              className="attach-button"
              title="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª"
            >
              <Paperclip size={20} />
            </button>
            <button
              onClick={handleSendMessage}
              disabled={(!inputMessage.trim() && !selectedFile) || isLoading}
              className="send-button"
            >
              <Send size={20} />
            </button>
          </div>
        )}
        <input
          ref={fileInputRef}
          type="file"
          onChange={handleFileSelect}
          accept=".pdf,.xlsx,.xls,.csv,.doc,.docx"
          style={{ display: 'none' }}
        />
      </div>
    </div>
  )
}

export default AgentsChat
